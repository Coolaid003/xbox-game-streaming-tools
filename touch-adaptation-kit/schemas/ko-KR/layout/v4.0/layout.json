{
  "required": [
    "content"
  ],
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "properties": {
    "styles": {
      "$ref": "#/$defs/LayoutStyles"
    },
    "orientation": {
      "$ref": "#/$defs/LayoutOrientation"
    },
    "$schema": {
      "type": "string"
    },
    "definitions": {
      "$ref": "#/$defs/Definitions"
    },
    "content": {
      "$ref": "#/$defs/LayoutContent"
    }
  },
  "title": "터치 적응 번들 레이아웃 스키마",
  "description": "터치 적응 번들 레이아웃은 게임 시나리오와 모바일 또는 터치 게임 플레이를 허용하는 데 필요한 모든 컨트롤을 나타냅니다. 레이아웃 버전 간의 변경 내용에 대한 최신 정보는 https://github.com/microsoft/xbox-game-streaming-tools/releases를 참조하세요.",
  "markdownDescription": "터치 적응 번들 레이아웃은 게임 시나리오와 모바일 또는 터치 게임 플레이를 허용하는 데 필요한 모든 컨트롤을 나타냅니다. 레이아웃 버전 간의 변경 내용에 대한 최신 정보는 https://github.com/microsoft/xbox-game-streaming-tools/releases를 참조하세요.",
  "additionalProperties": false,
  "$id": "https://raw.githubusercontent.com/microsoft/xbox-game-streaming-tools/main/touch-adaptation-kit/schemas/layout/v4.0/layout.json",
  "$defs": {
    "DirectionalPadDefaultStyle": {
      "examples": [
        {},
        {
          "gradient": {
            "color": "#0099ffaa"
          },
          "stroke": {
            "color": "#0099ff",
            "type": "solid",
            "opacity": 1
          }
        },
        {
          "$ref": "#/definitions/commonDPadStyle"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "fill": {
              "$ref": "#/$defs/FillColor"
            },
            "stroke": {
              "$ref": "#/$defs/Stroke"
            },
            "gradient": {
              "$ref": "#/$defs/Gradient"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "Definitions": {
      "markdownDescription": "다시 사용할 수 있는 구성 요소와 터치 레이아웃 값을 포함하는 데 사용할 수 있는 섹션입니다. 이러한 정의는 나중에 '{ \"$ref\": \"#/definitions/joystickKnobStyle\" }'와 같은 JSON 참조를 사용하여 참조할 수 있습니다. JSON 참조는 레이아웃 스키마의 거의 모든 부분에서 지원되며, 여러 컨트롤에서 사용되는 공통 단추 배경과 같은 공통 요소를 축소하여 재사용할 수 있습니다. 컨텍스트 파일은 `definitions` 속성과 `state` 지원하여 레이아웃에서 구성 요소를 다시 사용할 수 있습니다.",
      "additionalProperties": false,
      "description": "다시 사용할 수 있는 구성 요소와 터치 레이아웃 값을 포함하는 데 사용할 수 있는 섹션입니다. 이러한 정의는 나중에 '{ \"$ref\": \"#/definitions/joystickKnobStyle\" }'와 같은 JSON 참조를 사용하여 참조할 수 있습니다. JSON 참조는 레이아웃 스키마의 거의 모든 부분에서 지원되며, 여러 컨트롤에서 사용되는 공통 단추 배경과 같은 공통 요소를 축소하여 재사용할 수 있습니다. 컨텍스트 파일은 `definitions` 속성과 `state` 지원하여 레이아웃에서 구성 요소를 다시 사용할 수 있습니다.",
      "title": "정의",
      "examples": [
        {},
        {
          "joystickKnob": {
            "default": {
              "knob": {
                "faceImage": {
                  "type": "asset",
                  "value": {
                    "$ref": "#/definitions/joystickAssetName"
                  }
                }
              }
            }
          },
          "joystickAssetName": "exampleAssetName"
        }
      ],
      "patternProperties": {
        "^(?!__proto__)[a-zA-Z0-9\\.\\-_]+$": {
          "$ref": "#/$defs/LayoutDefinableType"
        }
      },
      "type": "object"
    },
    "_InputAxisXY": {
      "description": "컨트롤의 X 및 Y 축에서 상호 작용을 사용하여 지정된 출력으로 변환합니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오.",
      "title": "X축 및 Y축 입력 매핑",
      "type": "string",
      "const": "axisXY",
      "markdownDescription": "컨트롤의 X 및 Y 축에서 상호 작용을 사용하여 지정된 출력으로 변환합니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오."
    },
    "LayerControlGroupItem": {
      "description": "레이어 컨트롤 그룹의 단일 항목입니다. 정렬에서 컨트롤을 건너뛰거나 `blank` `null` 사용하여 아래 레이어에서 컨트롤을 숨깁니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_LayerControlBase"
        },
        {
          "$ref": "#/$defs/_Null"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 레이어 제어 그룹 항목",
      "examples": [
        {
          "$ref": "#/definitions/commonLayerButtonControl"
        }
      ],
      "markdownDescription": "레이어 컨트롤 그룹의 단일 항목입니다. 정렬에서 컨트롤을 건너뛰거나 `blank` `null` 사용하여 아래 레이어에서 컨트롤을 숨깁니다."
    },
    "Indicator": {
      "description": "컨트롤의 현재 값 또는 배치를 나타내는 데 사용되는 획의 시각적 스타일입니다.",
      "title": "지표 스타일링 구성 요소",
      "$ref": "#/$defs/_StrokeBase",
      "markdownDescription": "컨트롤의 현재 값 또는 배치를 나타내는 데 사용되는 획의 시각적 스타일입니다."
    },
    "FaceImage": {
      "description": "컨트롤 구성 요소의 전경을 나타내는 시각적 스타일입니다. 일반적으로 상호 작용의 의미 체계적 의미를 표시하는 데 사용됩니다. 얼굴 이미지는 `icon` 또는 `asset` 유형일 수 있습니다. 아이콘은 다양한 컨트롤 동작을 표현할 수 있는 기본 제공 그래픽이며, 자산은 컨트롤이 레이아웃과 함께 번들로 제공되는 사용자 지정 이미지를 사용할 수 있도록 합니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_FaceImageIcon"
        },
        {
          "$ref": "#/$defs/_FaceImageAsset"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "얼굴 이미지 스타일링 구성 요소",
      "examples": [
        {
          "type": "asset",
          "value": "CustomImageForJumpButtonFace"
        },
        {
          "type": "icon",
          "value": "interact"
        },
        {
          "$ref": "#/definitions/commonFaceImageStyling"
        }
      ],
      "markdownDescription": "컨트롤 구성 요소의 전경을 나타내는 시각적 스타일입니다. 일반적으로 상호 작용의 의미 체계적 의미를 표시하는 데 사용됩니다. 얼굴 이미지는 `icon` 또는 `asset` 유형일 수 있습니다. 아이콘은 다양한 컨트롤 동작을 표현할 수 있는 기본 제공 그래픽이며, 자산은 컨트롤이 레이아웃과 함께 번들로 제공되는 사용자 지정 이미지를 사용할 수 있도록 합니다."
    },
    "ControlGroupItem": {
      "description": "컨트롤 그룹의 단일 항목입니다. 정렬에서 컨트롤을 건너뛰려면 `null` 사용합니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_ControlBase"
        },
        {
          "$ref": "#/$defs/_Null"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 제어 그룹 항목",
      "markdownDescription": "컨트롤 그룹의 단일 항목입니다. 정렬에서 컨트롤을 건너뛰려면 `null` 사용합니다."
    },
    "LayoutOrientation": {
      "markdownDescription": "⚠️ 사용되지 않음: 이 속성은 더 이상 지원되지 않습니다. 해당 값이 무시되고 모든 레이아웃에서 `landscape` 해당 값을 사용합니다.",
      "deprecated": true,
      "enum": [
        "landscape-left",
        "landscape-right",
        "landscape",
        "portrait-up",
        "portrait"
      ],
      "description": "⚠️ 사용되지 않음: 이 속성은 더 이상 지원되지 않습니다. 해당 값이 무시되고 모든 레이아웃에서 `landscape` 해당 값을 사용합니다.",
      "title": "[사용되지 않음] 레이아웃 방향",
      "type": "string"
    },
    "PullIndicator": {
      "description": "컨트롤이 현재 당겨지고 있음을 나타내는 표시기의 시각적 스타일입니다. 컨트롤을 끌어오는 의미 체계를 나타내도록 색상을 사용자 지정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/PullIndicatorBackground"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "끌어오기 표시기 스타일 구성 요소",
      "examples": [
        {
          "background": {
            "type": "color",
            "value": "#0099ffaa"
          }
        },
        {
          "$ref": "#/definitions/commonPullIndicator"
        }
      ],
      "markdownDescription": "컨트롤이 현재 당겨지고 있음을 나타내는 표시기의 시각적 스타일입니다. 컨트롤을 끌어오는 의미 체계를 나타내도록 색상을 사용자 지정할 수 있습니다."
    },
    "_ActionTypeBase": {
      "examples": [
        "gamepadB",
        {
          "$ref": "../../context.json#/state/jumpControllerMapping"
        },
        [
          "gamepadA",
          "leftTrigger"
        ]
      ],
      "anyOf": [
        {
          "$ref": "#/$defs/_SingleControlActionAssignableTypes"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/_SingleControlActionAssignableTypes"
          }
        }
      ]
    },
    "_CustomColorPaletteColor": {
      "description": "이 속성은 다른 곳에서 참조할 수 있는 재사용 가능한 색을 정의합니다. 이 색은 'colors/' 접두사 다음에 색 이름을 사용하여 색을 스타일 지정에 사용할 수 있는 영역에서 참조할 수 있습니다.",
      "title": "사용자 지정 레이아웃 색상",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 다른 곳에서 참조할 수 있는 재사용 가능한 색을 정의합니다. 이 색은 'colors/' 접두사 다음에 색 이름을 사용하여 색을 스타일 지정에 사용할 수 있는 영역에서 참조할 수 있습니다."
    },
    "ColorPaletteHighContrastVariant": {
      "description": "이 속성은 고대비 모드가 활성화된 경우 다른 곳에서 참조할 수 있는 재사용 가능한 색상 모음을 정의합니다. 색상 정의는 레이아웃의 내용에 따라 다르거나 시스템의 기본 색상을 재정의할 수 있습니다. 시스템 색상에는 예약된 `system_` 키워드가 접두사로 붙습니다. 여기에 정의되지 않은 색상이나 고대비 모드가 비활성화된 경우 해당 색상 참조는 `default`에 정의된 색상으로 대체됩니다. 색상은 스타일 지정 목적으로 색상을 사용할 수 있는 영역에서 색상 이름 앞에 `colors/` 접두사를 사용하여 참조할 수 있습니다.",
      "title": "고대비 색상",
      "$ref": "#/$defs/_ColorPaletteBase",
      "markdownDescription": "이 속성은 고대비 모드가 활성화된 경우 다른 곳에서 참조할 수 있는 재사용 가능한 색상 모음을 정의합니다. 색상 정의는 레이아웃의 내용에 따라 다르거나 시스템의 기본 색상을 재정의할 수 있습니다. 시스템 색상에는 예약된 `system_` 키워드가 접두사로 붙습니다. 여기에 정의되지 않은 색상이나 고대비 모드가 비활성화된 경우 해당 색상 참조는 `default`에 정의된 색상으로 대체됩니다. 색상은 스타일 지정 목적으로 색상을 사용할 수 있는 영역에서 색상 이름 앞에 `colors/` 접두사를 사용하여 참조할 수 있습니다."
    },
    "_ControllerAnalogMagnitudinalJoystickOutputType": {
      "description": "지정된 게임패드 조이스틱 축을 따라 0에서 최대값까지 값을 출력합니다. `output`이 아닌 `action`으로 사용되는 경우 최대값만 사용됩니다.",
      "enum": [
        "leftJoystickRight",
        "leftJoystickLeft",
        "leftJoystickUp",
        "leftJoystickDown",
        "rightJoystickRight",
        "rightJoystickLeft",
        "rightJoystickUp",
        "rightJoystickDown"
      ],
      "title": "게임패드 아날로그 조이스틱 출력",
      "type": "string",
      "markdownDescription": "지정된 게임패드 조이스틱 축을 따라 0에서 최대값까지 값을 출력합니다. `output`이 아닌 `action`으로 사용되는 경우 최대값만 사용됩니다."
    },
    "JoystickStyles": {
      "description": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "default": {
              "$ref": "#/$defs/JoystickDefaultStyle"
            },
            "idle": {
              "$ref": "#/$defs/JoystickIdleStyle"
            },
            "disabled": {
              "$ref": "#/$defs/JoystickDisabledStyle"
            },
            "activated": {
              "$ref": "#/$defs/JoystickActivatedStyle"
            },
            "moving": {
              "$ref": "#/$defs/JoystickMovingStyle"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 스타일",
      "examples": [
        {},
        {
          "default": {
            "knob": {
              "background": {
                "type": "asset",
                "value": "CustomKnobBackgroundImage"
              },
              "stroke": {
                "type": "solid",
                "color": "#0099ffaa"
              },
              "faceImage": {
                "type": "asset",
                "value": "CustomKnobFaceImage"
              }
            },
            "background": {
              "type": "asset",
              "value": "CustomJoystickBackgroundImage"
            }
          }
        },
        {
          "$ref": "#/definitions/commonJoystickStyles"
        }
      ],
      "markdownDescription": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다."
    },
    "_InputMappingZY": {
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMappingZYToGamepad2DOutput"
        },
        {
          "$ref": "#/$defs/_InputMappingZYToMouse2DOutput"
        }
      ]
    },
    "LayerControlGroup": {
      "examples": [
        [],
        [
          null,
          {
            "type": "blank"
          },
          null
        ]
      ],
      "description": "그룹으로 정렬된 아래 레이어에서 컨트롤을 숨기는 `blank` 컨트롤을 포함하여 1~4개의 레이어 컨트롤 세트. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 컨트롤이 하나만 있는 그룹은 그룹이 더 큰 전체 상호 작용 영역을 포함할 수 있으므로 그룹화되지 않은 컨트롤과 다릅니다. `null`이라는 특수 값을 사용하여 색인을 건너뛸 수 있습니다. 또한 아래 레이어의 컨트롤 그룹이 이 컨트롤 그룹과 항목 수가 다른 경우 해당 레이어의 모든 항목이 숨겨집니다.",
      "minItems": 1,
      "title": "터치 레이아웃 레이어 컨트롤 그룹",
      "markdownDescription": "그룹으로 정렬된 아래 레이어에서 컨트롤을 숨기는 `blank` 컨트롤을 포함하여 1~4개의 레이어 컨트롤 세트. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 컨트롤이 하나만 있는 그룹은 그룹이 더 큰 전체 상호 작용 영역을 포함할 수 있으므로 그룹화되지 않은 컨트롤과 다릅니다. `null`이라는 특수 값을 사용하여 색인을 건너뛸 수 있습니다. 또한 아래 레이어의 컨트롤 그룹이 이 컨트롤 그룹과 항목 수가 다른 경우 해당 레이어의 모든 항목이 숨겨집니다.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/LayerControlGroupItem"
      },
      "maxItems": 4
    },
    "ThrottleAxisOutput": {
      "description": "이 속성은 컨트롤과 플레이어의 상호 작용에서 중간 지점에서 지정된 출력까지 위 또는 아래로 단일 매핑을 정의합니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_ControllerAnalogMagnitudinalOutputType"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "스로틀 축",
      "examples": [
        "rightTrigger",
        "leftJoystickUp",
        {
          "$ref": "#/definitions/commonThrottleAxis"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤과 플레이어의 상호 작용에서 중간 지점에서 지정된 출력까지 위 또는 아래로 단일 매핑을 정의합니다."
    },
    "_InputMappingXYToMouse2DOutput": {
      "properties": {
        "sensitivity": {
          "$ref": "#/$defs/Sensitivity"
        },
        "output": {
          "$ref": "#/$defs/_RelativeMouse2DOutputType"
        },
        "input": {
          "$ref": "#/$defs/_InputAxisXY"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "input",
        "output"
      ]
    },
    "_Gyroscope": {
      "additionalProperties": false,
      "properties": {
        "axis": {
          "$ref": "#/$defs/AxisMapping3D"
        },
        "type": {
          "description": "자이로 스코프 컨트롤. 이 컨트롤을 사용하면 장치의 동작, 특히 해당 축에 대한 회전을 게임 입력으로 변환할 수 있습니다. 이 컨트롤은 실제 세계 회전이 자연스럽게 게임의 관점을 회전할 수 있기 때문에 플레이어의 카메라를 제어하는 데 특히 유용할 수 있습니다.",
          "title": "자이로스코프 제어 유형",
          "type": "string",
          "const": "gyroscope",
          "markdownDescription": "자이로 스코프 컨트롤. 이 컨트롤을 사용하면 장치의 동작, 특히 해당 축에 대한 회전을 게임 입력으로 변환할 수 있습니다. 이 컨트롤은 실제 세계 회전이 자연스럽게 게임의 관점을 회전할 수 있기 때문에 플레이어의 카메라를 제어하는 데 특히 유용할 수 있습니다."
        },
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        }
      },
      "examples": [
        {
          "type": "gyroscope",
          "axis": {
            "input": "axisXY",
            "output": "rightJoystick"
          }
        }
      ],
      "type": "object",
      "required": [
        "type",
        "axis"
      ]
    },
    "LayerLowerArrayContent": {
      "description": "이 속성은 사용 가능한 표시 영역의 하단 중앙에서 바깥쪽으로 확장되는 배열인 레이어의 콘텐츠를 정의합니다. 이 속성은 이 속성 아래에 있는 레이어에서 컨트롤을 숨기는 데 `blank` 컨트롤을 사용할 수 있다는 점을 제외하면 레이아웃 콘텐츠의 동일한 명명된 속성과 동일하게 작동합니다.",
      "anyOf": [
        {
          "minItems": 1,
          "maxItems": 4,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/LayerControl"
              },
              {
                "$ref": "#/$defs/_Null"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "하위 계층 배열 콘텐츠",
      "examples": [
        [
          {
            "type": "blank"
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonLayerLowerLeftCenterContent"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 영역의 하단 중앙에서 바깥쪽으로 확장되는 배열인 레이어의 콘텐츠를 정의합니다. 이 속성은 이 속성 아래에 있는 레이어에서 컨트롤을 숨기는 데 `blank` 컨트롤을 사용할 수 있다는 점을 제외하면 레이아웃 콘텐츠의 동일한 명명된 속성과 동일하게 작동합니다."
    },
    "AxisCap": {
      "$ref": "#/$defs/AxisCapColor"
    },
    "_SystemColorContrastSecondary": {
      "description": "이 속성은 터치 패드 스트로크와 같은 대비 구성 요소에 사용되는 대비 보조 시스템 색을 재정의합니다.",
      "title": "대비 보조 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 터치 패드 스트로크와 같은 대비 구성 요소에 사용되는 대비 보조 시스템 색을 재정의합니다."
    },
    "_InputMappingXYToGamepad2DOutput": {
      "properties": {
        "sensitivity": {
          "$ref": "#/$defs/Sensitivity"
        },
        "output": {
          "$ref": "#/$defs/_ControllerAnalog2DOutputType"
        },
        "input": {
          "$ref": "#/$defs/_InputAxisXY"
        },
        "deadzone": {
          "$ref": "#/$defs/Deadzone2D"
        },
        "responseCurve": {
          "$ref": "#/$defs/InputCurve"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "input",
        "output"
      ]
    },
    "ControllerOnlyActionType": {
      "description": "이 속성을 사용하면 `activated` 상태일 때 컨트롤이 단일 게임패드 동작 또는 일련의 게임패드 동작을 수행할 수 있습니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_ControllerAction"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "게임패드 액션",
      "examples": [
        "gamepadB",
        {
          "$ref": "../../context.json#/state/jumpControllerMapping"
        },
        [
          "gamepadA",
          "leftTrigger"
        ]
      ],
      "markdownDescription": "이 속성을 사용하면 `activated` 상태일 때 컨트롤이 단일 게임패드 동작 또는 일련의 게임패드 동작을 수행할 수 있습니다."
    },
    "_Color": {
      "examples": [
        "#0099ff",
        "#0099ffaa",
        "#09f",
        "#09fa",
        "colors/system_contentPrimary",
        "colors/myColor",
        {
          "$ref": "#/definitions/commonAccentColor"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/$defs/_HexColor"
        },
        {
          "$ref": "#/$defs/_ColorReference"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "ExpandInteraction": {
      "description": "이 속성은 컨트롤이 사용 가능한 공간을 채우기 위해 상호 작용 가능한 영역을 확장해야 하는지 여부를 결정합니다. 플레이어가 영역의 크기를 사용자 지정할 수 있는 `inner` 휠 컨테이너에 특히 유용합니다. `false`로 설정하면 컨트롤이 기본 또는 최소 상호 작용 크기로 잠깁니다. 생략하면 기본값 `true`가 사용됩니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "확장",
      "examples": [
        true,
        false,
        {
          "$ref": "../../context.json#/state/playerExpandControlPreference"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤이 사용 가능한 공간을 채우기 위해 상호 작용 가능한 영역을 확장해야 하는지 여부를 결정합니다. 플레이어가 영역의 크기를 사용자 지정할 수 있는 `inner` 휠 컨테이너에 특히 유용합니다. `false`로 설정하면 컨트롤이 기본 또는 최소 상호 작용 크기로 잠깁니다. 생략하면 기본값 `true`가 사용됩니다."
    },
    "ControlEnabled": {
      "description": "컨트롤이 `disabled` 상태인지 여부를 결정하는 속성입니다. 이 속성은 게임 상태에 따라 컨트롤을 동적으로 활성화 및 비활성화할 수 있도록 컨텍스트 파일 `state`와 함께 사용할 때 가장 유용합니다. 생략하면 기본값 `true`가 사용됩니다. 비활성화되면 컨트롤이 표시되고 여전히 출력을 따라 전달되지만 활성화된 모양은 없습니다. 이 동작은 모양이 있고 화면에 렌더링되는 컨트롤에만 적용됩니다. 센서 컨트롤은 모양이 없기 때문에 비활성화된 상태일 때 출력을 전달하지 않습니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "사용",
      "examples": [
        true,
        false,
        {
          "$ref": "../../context.json#/state/hasSpellEquipped"
        }
      ],
      "markdownDescription": "컨트롤이 `disabled` 상태인지 여부를 결정하는 속성입니다. 이 속성은 게임 상태에 따라 컨트롤을 동적으로 활성화 및 비활성화할 수 있도록 컨텍스트 파일 `state`와 함께 사용할 때 가장 유용합니다. 생략하면 기본값 `true`가 사용됩니다. 비활성화되면 컨트롤이 표시되고 여전히 출력을 따라 전달되지만 활성화된 모양은 없습니다. 이 동작은 모양이 있고 화면에 렌더링되는 컨트롤에만 적용됩니다. 센서 컨트롤은 모양이 없기 때문에 비활성화된 상태일 때 출력을 전달하지 않습니다."
    },
    "_ControlTypeButton": {
      "description": "버튼 컨트롤은 컨트롤을 누르고 있는 동안 작업을 수행할 수 있는 간단한 컨트롤 유형입니다. 일부 고급 기능을 허용하기 위해 상호 작용이 제어 범위를 넘어 이동할 때 끌어오기 작업이라고 하는 추가 동작을 할당할 수 있습니다. 이는 사격 중 조준과 같이 컨트롤의 주요 동작과 함께 두 번째 동시 동작이 필요한 상황에서 유용합니다.",
      "title": "버튼 제어 유형",
      "type": "string",
      "const": "button",
      "markdownDescription": "버튼 컨트롤은 컨트롤을 누르고 있는 동안 작업을 수행할 수 있는 간단한 컨트롤 유형입니다. 일부 고급 기능을 허용하기 위해 상호 작용이 제어 범위를 넘어 이동할 때 끌어오기 작업이라고 하는 추가 동작을 할당할 수 있습니다. 이는 사격 중 조준과 같이 컨트롤의 주요 동작과 함께 두 번째 동시 동작이 필요한 상황에서 유용합니다."
    },
    "PullIndicatorBackground": {
      "description": "배경의 스타일을 지정하는 데 사용되는 색입니다. 색이 사용되는 정확한 셰이프는 구성 요소에 따라 달라지며 사용자 지정할 수 없습니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_BackgroundColor"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "배경 스타일 구성 요소",
      "examples": [
        {
          "$ref": "#/definitions/commonPullIndicatorBackground"
        }
      ],
      "markdownDescription": "배경의 스타일을 지정하는 데 사용되는 색입니다. 색이 사용되는 정확한 셰이프는 구성 요소에 따라 달라지며 사용자 지정할 수 없습니다."
    },
    "PullActionType": {
      "description": "이 속성을 사용하면 컨트롤이 `pulled` 상태일 때 단일 동작 또는 일련의 동작을 컨트롤에서 수행할 수 있습니다. 이러한 작업은 게임 패드 입력 또는 레이아웃에 새 레이어 표시와 같은 더 복잡한 작업에 매핑할 수 있습니다.",
      "title": "컨트롤 끌어오기 동작",
      "$ref": "#/$defs/_ActionTypeBase",
      "markdownDescription": "이 속성을 사용하면 컨트롤이 `pulled` 상태일 때 단일 동작 또는 일련의 동작을 컨트롤에서 수행할 수 있습니다. 이러한 작업은 게임 패드 입력 또는 레이아웃에 새 레이어 표시와 같은 더 복잡한 작업에 매핑할 수 있습니다."
    },
    "ControlGroup": {
      "markdownDescription": "그룹으로 배열된 1~4개의 컨트롤 세트. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 컨트롤이 하나만 있는 그룹은 그룹이 더 큰 전체 상호 작용 영역을 포함할 수 있으므로 그룹화되지 않은 컨트롤과 다릅니다. `null`이라는 특수 값을 사용하여 배열에서 컨트롤을 건너뛸 수 있습니다.",
      "items": {
        "$ref": "#/$defs/ControlGroupItem"
      },
      "description": "그룹으로 배열된 1~4개의 컨트롤 세트. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 컨트롤이 하나만 있는 그룹은 그룹이 더 큰 전체 상호 작용 영역을 포함할 수 있으므로 그룹화되지 않은 컨트롤과 다릅니다. `null`이라는 특수 값을 사용하여 배열에서 컨트롤을 건너뛸 수 있습니다.",
      "title": "터치 레이아웃 컨트롤 그룹",
      "examples": [
        [
          {
            "type": "button",
            "action": "gamepadX"
          },
          {
            "type": "button",
            "action": "gamepadY"
          }
        ],
        {
          "$ref": "#/definitions/commonControlGroup"
        }
      ],
      "anyOf": [
        {
          "maxItems": 4,
          "minItems": 1,
          "type": "array"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "LayerSensorContent": {
      "description": "이 속성은 장치의 센서 입력을 상호 작용으로 사용하는 레이어 콘텐츠의 컨테이너를 정의합니다. `blank` 컨트롤은 이 레이어 아래의 레이어에서 센서 컨트롤을 숨기거나 끄는 데 사용할 수 있습니다.",
      "anyOf": [
        {
          "minItems": 1,
          "maxItems": 4,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/SensorLayerControl"
              },
              {
                "$ref": "#/$defs/_Null"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "센서 레이어 콘텐츠",
      "examples": [
        [
          {
            "type": "blank"
          },
          {
            "type": "gyroscope",
            "axis": {
              "input": "axisXY",
              "output": "rightJoystick"
            }
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonLayerSensors"
        }
      ],
      "markdownDescription": "이 속성은 장치의 센서 입력을 상호 작용으로 사용하는 레이어 콘텐츠의 컨테이너를 정의합니다. `blank` 컨트롤은 이 레이어 아래의 레이어에서 센서 컨트롤을 숨기거나 끄는 데 사용할 수 있습니다."
    },
    "ButtonActivatedStyle": {
      "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "pullIndicator": {
              "$ref": "#/$defs/PullIndicator"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 활성화 스타일",
      "examples": [
        {},
        {
          "faceImage": {
            "type": "icon",
            "value": "interact"
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
    },
    "_InputMapping1DToGamepad1DOutput": {
      "properties": {
        "sensitivity": {
          "$ref": "#/$defs/Sensitivity"
        },
        "output": {
          "$ref": "#/$defs/_ControllerAnalog1DOutputType"
        },
        "input": {
          "$ref": "#/$defs/_InputAxis1D"
        },
        "deadzone": {
          "$ref": "#/$defs/Deadzone1D"
        },
        "responseCurve": {
          "$ref": "#/$defs/InputCurve"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "input",
        "output"
      ]
    },
    "LayoutDefinableType": {
      "description": "이 파일의 `definitions` 섹션에서 사용할 수 있는 모든 형식을 포함하는 공용 구조체 형식입니다. 자세한 내용은 `definitions` 섹션을 참조하세요.",
      "anyOf": [
        {
          "$ref": "#/$defs/ActionThreshold"
        },
        {
          "$ref": "#/$defs/ActionType"
        },
        {
          "$ref": "#/$defs/ArcadeButton"
        },
        {
          "$ref": "#/$defs/ArcadeButtonStyleBase"
        },
        {
          "$ref": "#/$defs/ArcadeButtonStyles"
        },
        {
          "$ref": "#/$defs/AssetReference"
        },
        {
          "$ref": "#/$defs/AxisCap"
        },
        {
          "$ref": "#/$defs/AxisCapColor"
        },
        {
          "$ref": "#/$defs/AxisMapping2D"
        },
        {
          "$ref": "#/$defs/AxisMapping3D"
        },
        {
          "$ref": "#/$defs/Background"
        },
        {
          "$ref": "#/$defs/BackgroundAssetValue"
        },
        {
          "$ref": "#/$defs/ButtonStyles"
        },
        {
          "$ref": "#/$defs/ButtonActivatedStyle"
        },
        {
          "$ref": "#/$defs/ButtonDefaultStyle"
        },
        {
          "$ref": "#/$defs/ButtonDisabledStyle"
        },
        {
          "$ref": "#/$defs/ButtonIdleStyle"
        },
        {
          "$ref": "#/$defs/ButtonToggledStyle"
        },
        {
          "$ref": "#/$defs/ButtonPulledStyle"
        },
        {
          "$ref": "#/$defs/Color"
        },
        {
          "$ref": "#/$defs/ColorPaletteDefaultVariant"
        },
        {
          "$ref": "#/$defs/ColorPaletteHighContrastVariant"
        },
        {
          "$ref": "#/$defs/Control"
        },
        {
          "$ref": "#/$defs/ControlEnabled"
        },
        {
          "$ref": "#/$defs/ControlGroup"
        },
        {
          "$ref": "#/$defs/ControlGroupItem"
        },
        {
          "$ref": "#/$defs/ControllerOnlyActionType"
        },
        {
          "$ref": "#/$defs/ControlVisibility"
        },
        {
          "$ref": "#/$defs/Deadzone1D"
        },
        {
          "$ref": "#/$defs/Deadzone2D"
        },
        {
          "$ref": "#/$defs/DeadzoneDirectionalPad"
        },
        {
          "$ref": "#/$defs/DeadzoneRadial"
        },
        {
          "$ref": "#/$defs/DeadzoneThreshold"
        },
        {
          "$ref": "#/$defs/DirectionalPadDefaultStyle"
        },
        {
          "$ref": "#/$defs/DirectionalPadIdleStyle"
        },
        {
          "$ref": "#/$defs/DirectionalPadInteraction"
        },
        {
          "$ref": "#/$defs/DirectionalPadInteractionActivationType"
        },
        {
          "$ref": "#/$defs/DirectionalPadStyles"
        },
        {
          "$ref": "#/$defs/ExpandInteraction"
        },
        {
          "$ref": "#/$defs/FaceImage"
        },
        {
          "$ref": "#/$defs/FaceImageAssetValue"
        },
        {
          "$ref": "#/$defs/FaceImageIconLabel"
        },
        {
          "$ref": "#/$defs/FaceImageIconValue"
        },
        {
          "$ref": "#/$defs/FillColor"
        },
        {
          "$ref": "#/$defs/Gradient"
        },
        {
          "$ref": "#/$defs/Indicator"
        },
        {
          "$ref": "#/$defs/InnerLayoutControlWheel"
        },
        {
          "$ref": "#/$defs/InnerLayerControlWheel"
        },
        {
          "$ref": "#/$defs/InputCurveRange"
        },
        {
          "$ref": "#/$defs/InputCurve"
        },
        {
          "$ref": "#/$defs/InputCurveType"
        },
        {
          "$ref": "#/$defs/JoystickActivatedStyle"
        },
        {
          "$ref": "#/$defs/JoystickDefaultStyle"
        },
        {
          "$ref": "#/$defs/JoystickDirectionIndicator"
        },
        {
          "$ref": "#/$defs/JoystickDisabledStyle"
        },
        {
          "$ref": "#/$defs/JoystickIdleStyle"
        },
        {
          "$ref": "#/$defs/JoystickMovingStyle"
        },
        {
          "$ref": "#/$defs/JoystickOutlineWithIndicator"
        },
        {
          "$ref": "#/$defs/JoystickOutlineWithoutIndicator"
        },
        {
          "$ref": "#/$defs/JoystickStyles"
        },
        {
          "$ref": "#/$defs/Knob"
        },
        {
          "$ref": "#/$defs/Layer"
        },
        {
          "$ref": "#/$defs/Layers"
        },
        {
          "$ref": "#/$defs/LayerControl"
        },
        {
          "$ref": "#/$defs/LayerControlGroup"
        },
        {
          "$ref": "#/$defs/LayerControlGroupItem"
        },
        {
          "$ref": "#/$defs/LayerControlWheel"
        },
        {
          "$ref": "#/$defs/LayerLowerArrayContent"
        },
        {
          "$ref": "#/$defs/LayerLowerContent"
        },
        {
          "$ref": "#/$defs/LayerSensorContent"
        },
        {
          "$ref": "#/$defs/LayerUpperContent"
        },
        {
          "$ref": "#/$defs/LayerUpperRightContent"
        },
        {
          "$ref": "#/$defs/LayoutContent"
        },
        {
          "$ref": "#/$defs/LayoutControlWheel"
        },
        {
          "$ref": "#/$defs/LayoutColors"
        },
        {
          "$ref": "#/$defs/LayoutOrientation"
        },
        {
          "$ref": "#/$defs/LayoutLowerArrayContent"
        },
        {
          "$ref": "#/$defs/LayoutLowerContent"
        },
        {
          "$ref": "#/$defs/LayoutSensorContent"
        },
        {
          "$ref": "#/$defs/LayoutUpperContent"
        },
        {
          "$ref": "#/$defs/LayoutUpperRightContent"
        },
        {
          "$ref": "#/$defs/_Null"
        },
        {
          "$ref": "#/$defs/Opacity"
        },
        {
          "$ref": "#/$defs/OuterLayoutControlWheel"
        },
        {
          "$ref": "#/$defs/OuterWheelControlGroup"
        },
        {
          "$ref": "#/$defs/OuterLayerControlWheel"
        },
        {
          "$ref": "#/$defs/OuterWheelLayerControlGroup"
        },
        {
          "$ref": "#/$defs/PullActionType"
        },
        {
          "$ref": "#/$defs/PullIndicator"
        },
        {
          "$ref": "#/$defs/RelativeInteraction"
        },
        {
          "$ref": "#/$defs/RenderAsButton"
        },
        {
          "$ref": "#/$defs/Scale"
        },
        {
          "$ref": "#/$defs/Sensitivity"
        },
        {
          "$ref": "#/$defs/SensorControl"
        },
        {
          "$ref": "#/$defs/Sticky"
        },
        {
          "$ref": "#/$defs/Stroke"
        },
        {
          "$ref": "#/$defs/LayoutStyles"
        },
        {
          "$ref": "#/$defs/ThrottleAxisOutput"
        },
        {
          "$ref": "#/$defs/ThrottleAxisStyle"
        },
        {
          "$ref": "#/$defs/ThrottleStyleBase"
        },
        {
          "$ref": "#/$defs/ThrottleStyles"
        },
        {
          "$ref": "#/$defs/Toggle"
        },
        {
          "$ref": "#/$defs/TouchpadStyleBase"
        },
        {
          "$ref": "#/$defs/TouchpadStyles"
        }
      ],
      "title": "정의 가능한 유형",
      "markdownDescription": "이 파일의 `definitions` 섹션에서 사용할 수 있는 모든 형식을 포함하는 공용 구조체 형식입니다. 자세한 내용은 `definitions` 섹션을 참조하세요."
    },
    "_InputMapping1DToRelativeMouse1DOutput": {
      "anyOf": [
        {
          "properties": {
            "sensitivity": {
              "$ref": "#/$defs/Sensitivity"
            },
            "output": {
              "$ref": "#/$defs/_RelativeMouse1DOutputType"
            },
            "input": {
              "$ref": "#/$defs/_InputAxis1D"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "input",
            "output"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_InputMappingMagnitudinalToRelativeMouseMagnitudinalOutput": {
      "anyOf": [
        {
          "properties": {
            "sensitivity": {
              "$ref": "#/$defs/Sensitivity"
            },
            "output": {
              "$ref": "#/$defs/_RelativeMouseMagnitudinalOutputType"
            },
            "input": {
              "$ref": "#/$defs/_InputAxisMagnitudinal"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "input",
            "output"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_TurboAction": {
      "markdownDescription": "연속이 아닌 간격을 기준으로 켜고 끄는 동작입니다.",
      "description": "연속이 아닌 간격을 기준으로 켜고 끄는 동작입니다.",
      "properties": {
        "action": {
          "$ref": "#/$defs/ControllerOnlyActionType"
        },
        "type": {
          "description": "연속이 아닌 간격을 기준으로 켜고 끄는 동작입니다.",
          "title": "터보 액션",
          "type": "string",
          "const": "turbo",
          "markdownDescription": "연속이 아닌 간격을 기준으로 켜고 끄는 동작입니다."
        },
        "interval": {
          "$ref": "#/$defs/TurboActionInterval"
        }
      },
      "title": "터보 액션",
      "additionalProperties": false,
      "required": [
        "type",
        "action",
        "interval"
      ],
      "type": "object"
    },
    "_ArcadeButtons": {
      "additionalProperties": false,
      "properties": {
        "mediumPunch": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "중간 펀치 버튼"
        },
        "heavyKick": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "헤비 킥 버튼"
        },
        "heavyPunch": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "헤비 킥 버튼"
        },
        "lightKick": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "라이트 킥 버튼"
        },
        "specialKick": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "스페셜 킥 버튼"
        },
        "specialPunch": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "특수 펀치 버튼"
        },
        "type": {
          "$ref": "#/$defs/_ControlTypeArcadeButtons"
        },
        "lightPunch": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "라이트 펀치 버튼"
        },
        "mediumKick": {
          "$ref": "#/$defs/ArcadeButton",
          "title": "미디엄 킥 버튼"
        }
      },
      "examples": [
        {
          "specialKick": {
            "action": [
              "gamepadA",
              "gamepadB"
            ]
          },
          "lightKick": {
            "action": "gamepadA"
          },
          "heavyPunch": {
            "action": "leftBumper"
          },
          "heavyKick": {
            "action": "gamepadX"
          },
          "mediumPunch": {
            "action": "rightBumper"
          },
          "specialPunch": {
            "action": [
              "gamepadX",
              "gamepadY"
            ]
          },
          "type": "arcadeButtons",
          "lightPunch": {
            "action": "gamepady"
          },
          "mediumKick": {
            "action": "gamepadB"
          }
        }
      ],
      "type": "object",
      "required": [
        "type",
        "lightKick",
        "mediumKick",
        "heavyKick",
        "lightPunch",
        "mediumPunch",
        "heavyPunch"
      ]
    },
    "Opacity": {
      "description": "이 속성은 컨트롤 구성 요소의 투명도를 변경합니다. 생략하면 컨트롤이 완전히 불투명하다는 의미인 기본값 1이 사용됩니다.",
      "anyOf": [
        {
          "minimum": 0,
          "type": "number",
          "maximum": 1
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "불투명",
      "examples": [
        1,
        0.5,
        0,
        {
          "$ref": "#/definitions/buttonOpacity"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤 구성 요소의 투명도를 변경합니다. 생략하면 컨트롤이 완전히 불투명하다는 의미인 기본값 1이 사용됩니다."
    },
    "LayoutColors": {
      "description": "이 속성은 다른 곳에서 참조할 수 있는 색상 정의로 구성된 색상 팔레트 모음을 정의합니다. 각 스타일 변형에 대해 색상 팔레트를 정의할 수 있습니다. 특정 변형에 정의되지 않은 색상의 경우 `default` 색상 팔레트 또는 시스템 기본값이 사용됩니다. 색상 정의는 레이아웃의 내용에 따라 다르거나 시스템의 기본 색상을 재정의할 수 있습니다. 시스템 색상에는 예약된 `system_` 키워드가 접두사로 붙습니다. 색상은 스타일 지정 목적으로 색상을 사용할 수 있는 영역에서 색상 이름 앞에 `colors/` 접두사를 사용하여 참조할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "default": {
              "$ref": "#/$defs/ColorPaletteDefaultVariant"
            },
            "highContrast": {
              "$ref": "#/$defs/ColorPaletteHighContrastVariant"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "색",
      "examples": [
        {},
        {
          "default": {
            "myColor": "#ff0000ff",
            "system_contentPrimary": "#ffffffff"
          },
          "highContrast": {
            "myColor": "#00ff00ff",
            "system_contentPrimary": "#ffffffff"
          }
        },
        {
          "$ref": "#/definitions/myColors"
        }
      ],
      "markdownDescription": "이 속성은 다른 곳에서 참조할 수 있는 색상 정의로 구성된 색상 팔레트 모음을 정의합니다. 각 스타일 변형에 대해 색상 팔레트를 정의할 수 있습니다. 특정 변형에 정의되지 않은 색상의 경우 `default` 색상 팔레트 또는 시스템 기본값이 사용됩니다. 색상 정의는 레이아웃의 내용에 따라 다르거나 시스템의 기본 색상을 재정의할 수 있습니다. 시스템 색상에는 예약된 `system_` 키워드가 접두사로 붙습니다. 색상은 스타일 지정 목적으로 색상을 사용할 수 있는 영역에서 색상 이름 앞에 `colors/` 접두사를 사용하여 참조할 수 있습니다."
    },
    "_ControllerTriggerOutputType": {
      "description": "지정된 게임패드 트리거에 매핑되는 값을 출력합니다.",
      "enum": [
        "leftTrigger",
        "rightTrigger"
      ],
      "title": "게임패드 아날로그 트리거 출력",
      "type": "string",
      "markdownDescription": "지정된 게임패드 트리거에 매핑되는 값을 출력합니다."
    },
    "ButtonDefaultStyle": {
      "description": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "pullIndicator": {
              "$ref": "#/$defs/PullIndicator"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "제어 기본 스타일",
      "examples": [
        {},
        {
          "faceImage": {
            "type": "icon",
            "value": "interact"
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyle"
        }
      ],
      "markdownDescription": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다."
    },
    "_ControlTypeDirectionalPad": {
      "description": "방향 패드 컨트롤은 실제 게임 패드에 있는 표준 4방향 또는 8방향 컨트롤을 모방합니다. 이 컨트롤은 특정 작업을 수행하기 위해 정확한 지시가 필요한 2D 플랫포머 및 격투 게임에서 특히 유용합니다. 4방향 또는 8방향 스타일 컨트롤 중에서 선택하려면 `interaction` 속성을 참조하세요.",
      "title": "방향 패드 제어 유형",
      "type": "string",
      "const": "directionalPad",
      "markdownDescription": "방향 패드 컨트롤은 실제 게임 패드에 있는 표준 4방향 또는 8방향 컨트롤을 모방합니다. 이 컨트롤은 특정 작업을 수행하기 위해 정확한 지시가 필요한 2D 플랫포머 및 격투 게임에서 특히 유용합니다. 4방향 또는 8방향 스타일 컨트롤 중에서 선택하려면 `interaction` 속성을 참조하세요."
    },
    "_ControlTypeTouchpad": {
      "description": "랩톱 컴퓨터에 있는 물리적 터치패드를 모방한 터치패드 컨트롤입니다. 이 컨트롤은 카메라 컨트롤과 같은 마우스 또는 조이스틱 스타일의 움직임에 가장 적합하며 플레이어가 스와이프 및 드래그를 통해 정밀한 컨트롤을 허용합니다. 또한 `action`을 컨트롤에 할당할 수 있으며 `renderAsButton`을 사용하여 버튼으로 렌더링하여 움직임이나 카메라를 조준이나 점프와 같은 일반적인 동작과 결합하는 컨트롤을 만들 수 있습니다.",
      "title": "터치패드 제어 방식",
      "type": "string",
      "const": "touchpad",
      "markdownDescription": "랩톱 컴퓨터에 있는 물리적 터치패드를 모방한 터치패드 컨트롤입니다. 이 컨트롤은 카메라 컨트롤과 같은 마우스 또는 조이스틱 스타일의 움직임에 가장 적합하며 플레이어가 스와이프 및 드래그를 통해 정밀한 컨트롤을 허용합니다. 또한 `action`을 컨트롤에 할당할 수 있으며 `renderAsButton`을 사용하여 버튼으로 렌더링하여 움직임이나 카메라를 조준이나 점프와 같은 일반적인 동작과 결합하는 컨트롤을 만들 수 있습니다."
    },
    "_InputMapping2D": {
      "$ref": "#/$defs/_InputMappingXY"
    },
    "DirectionalPadInteraction": {
      "description": "이 속성은 플레이어가 컨트롤을 상호 작용하는 방법을 결정합니다. 자세한 내용은 `activationType` 속성을 참조하십시오.",
      "anyOf": [
        {
          "properties": {
            "activationType": {
              "$ref": "#/$defs/DirectionalPadInteractionActivationType"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "상호 작용",
      "examples": [
        {
          "activationType": "exclusive"
        },
        {
          "activationType": "allowNeighboring"
        },
        {
          "$ref": "../../context.json#/definitions/commonDPadInteraction"
        }
      ],
      "markdownDescription": "이 속성은 플레이어가 컨트롤을 상호 작용하는 방법을 결정합니다. 자세한 내용은 `activationType` 속성을 참조하십시오."
    },
    "_ControllerAction": {
      "anyOf": [
        {
          "$ref": "#/$defs/_ControllerButtonOutputType"
        },
        {
          "$ref": "#/$defs/_ControllerAnalogMagnitudinalOutputType"
        }
      ]
    },
    "LayerControl": {
      "description": "플레이어가 변환된 작업을 수행하기 위해 상호 작용할 수 있는 현재 레이어의 개별 컨트롤입니다. 특정 컨트롤 유형 및 목적에 대한 정보는 `type` 속성을 참조하세요. 레이어는 이 레이어 아래의 레이어에서 모든 컨트롤을 숨기기 위해 특수한 `blank` 컨트롤 유형을 추가합니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_LayerControlBase"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 레이어 컨트롤",
      "examples": [
        {
          "$ref": "#/definitions/commonLayerButtonControl"
        }
      ],
      "markdownDescription": "플레이어가 변환된 작업을 수행하기 위해 상호 작용할 수 있는 현재 레이어의 개별 컨트롤입니다. 특정 컨트롤 유형 및 목적에 대한 정보는 `type` 속성을 참조하세요. 레이어는 이 레이어 아래의 레이어에서 모든 컨트롤을 숨기기 위해 특수한 `blank` 컨트롤 유형을 추가합니다."
    },
    "AxisMapping3D": {
      "description": "이 속성은 컨트롤과 플레이어의 3차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 매핑 또는 매핑 집합을 정의합니다. 장치 센서와 같은 3차원 상호 작용의 경우 좌표 공간은 항상 게임의 비디오를 기준으로 합니다. 즉, 양의 X 방향은 영상의 오른쪽, 양의 Y 방향은 영상의 상단, 양의 Z 방향은 영상에서 플레이어를 향하도록 하는 것입니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMapping3DTo2DOutput"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/_InputMapping2D"
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "3차원 축 매핑",
      "examples": [
        {
          "sensitivity": 0.3,
          "output": "rightJoystick",
          "input": "axisXY"
        },
        {
          "input": "axisXY",
          "output": "relativeMouse"
        },
        [
          {
            "input": "axisUp",
            "output": "rightTrigger"
          },
          {
            "input": "axisDown",
            "output": "leftTrigger"
          }
        ],
        {
          "$ref": "#/definitions/commonAxisMapping"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤과 플레이어의 3차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 매핑 또는 매핑 집합을 정의합니다. 장치 센서와 같은 3차원 상호 작용의 경우 좌표 공간은 항상 게임의 비디오를 기준으로 합니다. 즉, 양의 X 방향은 영상의 오른쪽, 양의 Y 방향은 영상의 상단, 양의 Z 방향은 영상에서 플레이어를 향하도록 하는 것입니다."
    },
    "ActionType": {
      "description": "이 속성을 사용하면 컨트롤이 `activated` 상태일 때 단일 작업 또는 일련의 작업을 컨트롤에서 수행할 수 있습니다. 이러한 작업은 게임 패드 입력 또는 레이아웃에 새 레이어 표시와 같은 더 복잡한 작업에 매핑할 수 있습니다.",
      "title": "제어 동작",
      "$ref": "#/$defs/_ActionTypeBase",
      "markdownDescription": "이 속성을 사용하면 컨트롤이 `activated` 상태일 때 단일 작업 또는 일련의 작업을 컨트롤에서 수행할 수 있습니다. 이러한 작업은 게임 패드 입력 또는 레이아웃에 새 레이어 표시와 같은 더 복잡한 작업에 매핑할 수 있습니다."
    },
    "InputCurveType": {
      "markdownDescription": "⚠️ 사용되지 않음: 이 속성은 동작을 변경하거나 향후 버전에서 제거될 수 있습니다. 이 속성은 사용할 곡선 유형을 정의합니다. `circular` 유형은 원의 오른쪽 아래 사분면의 모양과 일치하는 원형 곡선으로 입력을 매핑하는 데 사용할 수 있습니다. `circular-inverse` 값은 원의 왼쪽 위 사분면의 모양과 일치하는 원형 곡선으로 입력을 매핑하는 데 사용할 수 있습니다.",
      "deprecated": true,
      "description": "⚠️ 사용되지 않음: 이 속성은 동작을 변경하거나 향후 버전에서 제거될 수 있습니다. 이 속성은 사용할 곡선 유형을 정의합니다. `circular` 유형은 원의 오른쪽 아래 사분면의 모양과 일치하는 원형 곡선으로 입력을 매핑하는 데 사용할 수 있습니다. `circular-inverse` 값은 원의 왼쪽 위 사분면의 모양과 일치하는 원형 곡선으로 입력을 매핑하는 데 사용할 수 있습니다.",
      "title": "[사용되지 않음] 입력 응답 곡선 유형",
      "examples": [
        "circular",
        "circular-inverse",
        {
          "$ref": "#/definitions/commonJoystickResponseCurve"
        }
      ],
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "circular",
            "circular-inverse"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_HexColor": {
      "type": "string",
      "pattern": "^#([a-fA-F0-9]{6}|[a-fA-F0-9]{8}|[a-fA-F0-9]{4}|[a-fA-F0-9]{3})$"
    },
    "_ColorPaletteColor": {
      "examples": [
        "#0099ff",
        "#0099ffaa",
        "#09f",
        "#09fa",
        {
          "$ref": "#/definitions/myColor"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/$defs/_HexColor"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "BackgroundAssetValue": {
      "$ref": "#/$defs/AssetReference"
    },
    "TouchpadStyles": {
      "description": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "default": {
              "description": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다.",
              "title": "제어 기본 스타일",
              "$ref": "#/$defs/TouchpadStyleBase",
              "markdownDescription": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다."
            },
            "idle": {
              "description": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다.",
              "title": "유휴 스타일 제어",
              "$ref": "#/$defs/TouchpadStyleBase",
              "markdownDescription": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다."
            },
            "disabled": {
              "description": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다.",
              "title": "컨트롤 비활성화 스타일",
              "$ref": "#/$defs/TouchpadStyleBase",
              "markdownDescription": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다."
            },
            "activated": {
              "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
              "title": "컨트롤 활성화 스타일",
              "$ref": "#/$defs/TouchpadStyleBase",
              "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
            },
            "moving": {
              "description": "컨트롤이 `moving` 상태일 때 사용되는 스타일 재정의입니다. `moving` 상태는 컨트롤이 상호작용 중이지만 해당 동작이 아직 실행되지 않은 상태입니다. 상호 작용의 방향을 나타내기 위해 이 상태에서 추가 스타일 요소를 사용할 수 있습니다.",
              "title": "제어 이동 스타일",
              "$ref": "#/$defs/TouchpadStyleBase",
              "markdownDescription": "컨트롤이 `moving` 상태일 때 사용되는 스타일 재정의입니다. `moving` 상태는 컨트롤이 상호작용 중이지만 해당 동작이 아직 실행되지 않은 상태입니다. 상호 작용의 방향을 나타내기 위해 이 상태에서 추가 스타일 요소를 사용할 수 있습니다."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 스타일",
      "examples": [
        {
          "default": {
            "faceImage": {
              "type": "icon",
              "value": "look"
            }
          }
        },
        {
          "$ref": "#/definitions/commonTouchpadControlStyles"
        }
      ],
      "markdownDescription": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다."
    },
    "ButtonIdleStyle": {
      "description": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 컨트롤의 중립 또는 휴지 상태입니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 완전히 투명한 배경 및 끌어오기 표시기와 함께 사용되어 컨트롤이 유휴 상태이고 상호 작용하지 않음을 나타냅니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "유휴 스타일 제어",
      "examples": [
        {},
        {
          "faceImage": {
            "type": "icon",
            "value": "interact"
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 컨트롤의 중립 또는 휴지 상태입니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 완전히 투명한 배경 및 끌어오기 표시기와 함께 사용되어 컨트롤이 유휴 상태이고 상호 작용하지 않음을 나타냅니다."
    },
    "_InputMappingXY": {
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMappingXYToGamepad2DOutput"
        },
        {
          "$ref": "#/$defs/_InputMappingXYToMouse2DOutput"
        }
      ]
    },
    "_ColorPaletteBase": {
      "additionalProperties": false,
      "properties": {
        "system_actionColorY": {
          "$ref": "#/$defs/_SystemColorGamepadActionColor"
        },
        "system_accentPrimary": {
          "$ref": "#/$defs/_SystemColorAccentPrimary"
        },
        "system_contrastSecondary": {
          "$ref": "#/$defs/_SystemColorContrastSecondary"
        },
        "system_contrastPrimary": {
          "$ref": "#/$defs/_SystemColorContrastPrimary"
        },
        "system_actionColorA": {
          "$ref": "#/$defs/_SystemColorGamepadActionColor"
        },
        "system_accentSecondary": {
          "$ref": "#/$defs/_SystemColorAccentSecondary"
        },
        "system_contentPrimary": {
          "$ref": "#/$defs/_SystemColorContentPrimary"
        },
        "system_contentSecondary": {
          "$ref": "#/$defs/_SystemColorContentSecondary"
        },
        "system_actionColorDefault": {
          "$ref": "#/$defs/_SystemColorActionColor"
        },
        "system_actionColorX": {
          "$ref": "#/$defs/_SystemColorGamepadActionColor"
        },
        "system_actionColorB": {
          "$ref": "#/$defs/_SystemColorGamepadActionColor"
        }
      },
      "examples": [
        {},
        {
          "myColor": "#ff00ffff",
          "system_contentPrimary": "#ffffffff"
        }
      ],
      "type": "object",
      "patternProperties": {
        "^(?!system_)[a-zA-Z0-9\\.\\-_]+$": {
          "$ref": "#/$defs/_CustomColorPaletteColor"
        }
      }
    },
    "Control": {
      "description": "플레이어가 번역된 작업을 수행하기 위해 상호 작용할 수 있는 개별 컨트롤입니다. 특정 컨트롤 유형 및 목적에 대한 정보는 `type` 속성을 참조하세요.",
      "anyOf": [
        {
          "$ref": "#/$defs/_ControlBase"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 제어",
      "examples": [
        {
          "$ref": "#/definitions/commonButtonControl"
        }
      ],
      "markdownDescription": "플레이어가 번역된 작업을 수행하기 위해 상호 작용할 수 있는 개별 컨트롤입니다. 특정 컨트롤 유형 및 목적에 대한 정보는 `type` 속성을 참조하세요."
    },
    "_ControllerButtonOutputType": {
      "description": "게임패드 버튼 누름을 출력합니다.",
      "enum": [
        "guide",
        "gamepadA",
        "gamepadB",
        "gamepadX",
        "gamepadY",
        "view",
        "menu",
        "leftBumper",
        "rightBumper",
        "dPadLeft",
        "dPadRight",
        "dPadUp",
        "dPadDown",
        "leftThumb",
        "rightThumb"
      ],
      "title": "게임패드 버튼 출력",
      "type": "string",
      "markdownDescription": "게임패드 버튼 누름을 출력합니다."
    },
    "ButtonToggledStyle": {
      "description": "컨트롤이 `toggled` 상태일 때 사용되는 스타일 재정의입니다. `toggled` 상태는 컨트롤이 상호 작용하지 않지만 현재 토글 상태이므로 해당 작업이 실행되는 경우입니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "전환된 스타일 제어",
      "examples": [
        {},
        {
          "faceImage": {
            "type": "icon",
            "value": "interact"
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `toggled` 상태일 때 사용되는 스타일 재정의입니다. `toggled` 상태는 컨트롤이 상호 작용하지 않지만 현재 토글 상태이므로 해당 작업이 실행되는 경우입니다."
    },
    "_RelativeMouse2DOutputType": {
      "description": "이 출력 유형은 2차원 제어 입력을 받아 상대적인 마우스 움직임으로 변환합니다.",
      "title": "상대 마우스 2차원 출력",
      "type": "string",
      "const": "relativeMouse",
      "markdownDescription": "이 출력 유형은 2차원 제어 입력을 받아 상대적인 마우스 움직임으로 변환합니다."
    },
    "_ControlTypeArcadeButtons": {
      "description": "아케이드 버튼 컨트롤. 이 컨트롤은 일반적인 6개 또는 8개 버튼 아케이드 캐비닛 배열을 기반으로 배열된 버튼 그룹입니다. 일반적으로 격투 스타일 게임에서 사용됩니다. 버튼 사이를 터치하면 플레이어가 한 번에 여러 버튼을 누를 수 있습니다. 버튼 열의 위나 아래를 터치하면 해당 행의 모든 버튼이 동시에 활성화되어 콤보를 더 쉽게 수행할 수 있습니다.",
      "title": "아케이드 버튼 제어 유형",
      "type": "string",
      "const": "arcadeButtons",
      "markdownDescription": "아케이드 버튼 컨트롤. 이 컨트롤은 일반적인 6개 또는 8개 버튼 아케이드 캐비닛 배열을 기반으로 배열된 버튼 그룹입니다. 일반적으로 격투 스타일 게임에서 사용됩니다. 버튼 사이를 터치하면 플레이어가 한 번에 여러 버튼을 누를 수 있습니다. 버튼 열의 위나 아래를 터치하면 해당 행의 모든 버튼이 동시에 활성화되어 콤보를 더 쉽게 수행할 수 있습니다."
    },
    "LayoutControlWheel": {
      "description": "원 또는 바퀴 모양으로 구성된 컨트롤 세트입니다. 이러한 휠 컨트롤은 기본적으로 레이아웃 콘텐츠에서 `right` 또는 `left` 속성이 사용되었는지 여부에 따라 화면의 오른쪽 또는 왼쪽에 있는 플레이어의 엄지손가락 아래에 배치됩니다. 휠은 내부 제어 그룹과 외부 제어 링으로 구성됩니다.",
      "anyOf": [
        {
          "properties": {
            "outer": {
              "$ref": "#/$defs/OuterLayoutControlWheel"
            },
            "inner": {
              "$ref": "#/$defs/InnerLayoutControlWheel"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 컨트롤 휠",
      "examples": [
        {},
        {
          "outer": [
            null,
            [
              {
                "type": "button",
                "action": "gamepadX"
              }
            ],
            {
              "type": "button",
              "action": "gamepadY"
            }
          ],
          "inner": [
            {
              "type": "joystick",
              "axis": {
                "input": "axisXY",
                "output": "leftJoystick"
              }
            }
          ]
        },
        {
          "$ref": "#/definitions/commonControlWheel"
        }
      ],
      "markdownDescription": "원 또는 바퀴 모양으로 구성된 컨트롤 세트입니다. 이러한 휠 컨트롤은 기본적으로 레이아웃 콘텐츠에서 `right` 또는 `left` 속성이 사용되었는지 여부에 따라 화면의 오른쪽 또는 왼쪽에 있는 플레이어의 엄지손가락 아래에 배치됩니다. 휠은 내부 제어 그룹과 외부 제어 링으로 구성됩니다."
    },
    "Reference": {
      "additionalProperties": false,
      "properties": {
        "$ref": {
          "description": "컨텍스트 파일과 같이 로컬 또는 인근 파일에 정의된 값에 대한 참조입니다. 자세한 내용은 `definitions` 레이아웃 속성을 참조하십시오.",
          "exmaples": [
            "#/definitions/layoutReusableItem",
            "../../context.json#/state/dynamicStateValue",
            "../../context.json#/definitions/globalReusableItem"
          ],
          "type": "string",
          "format": "uri-reference",
          "markdownDescription": "컨텍스트 파일과 같이 로컬 또는 인근 파일에 정의된 값에 대한 참조입니다. 자세한 내용은 `definitions` 레이아웃 속성을 참조하십시오."
        }
      },
      "type": "object",
      "required": [
        "$ref"
      ]
    },
    "LayerUpperRightContent": {
      "description": "이 속성은 사용 가능한 표시 공간의 오른쪽 상단 모서리에 고정되는 레이어 콘텐츠를 정의합니다. 이 속성은 기본 레이아웃의 오른쪽 위 영역을 미러링합니다. 단, `blank` 컨트롤 유형을 사용하여 이 레이어 아래의 레이어에서 컨트롤을 숨길 수 있습니다.",
      "anyOf": [
        {
          "minItems": 1,
          "maxItems": 5,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/LayerControl"
              },
              {
                "$ref": "#/$defs/_Null"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "상위 계층 오른쪽 콘텐츠",
      "examples": [
        [
          {
            "type": "blank"
          },
          {
            "type": "button",
            "action": "view"
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonUpperRightLayerControls"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 공간의 오른쪽 상단 모서리에 고정되는 레이어 콘텐츠를 정의합니다. 이 속성은 기본 레이아웃의 오른쪽 위 영역을 미러링합니다. 단, `blank` 컨트롤 유형을 사용하여 이 레이어 아래의 레이어에서 컨트롤을 숨길 수 있습니다."
    },
    "LayoutStyles": {
      "description": "이 속성은 스타일 지정을 위해 레이아웃 전체에서 참조할 수 있는 재사용 가능한 스타일을 정의합니다. 컨텍스트 파일에 동일한 `styles` 속성이 정의되어 있으면 각 속성의 내용이 병합됩니다. 중복 정의가 발견되면 레이아웃의 정의가 우선하며 컨텍스트 파일에서 정의를 덮어씁니다.",
      "title": "레이아웃 스타일",
      "$ref": "#/$defs/_LayoutStyles",
      "markdownDescription": "이 속성은 스타일 지정을 위해 레이아웃 전체에서 참조할 수 있는 재사용 가능한 스타일을 정의합니다. 컨텍스트 파일에 동일한 `styles` 속성이 정의되어 있으면 각 속성의 내용이 병합됩니다. 중복 정의가 발견되면 레이아웃의 정의가 우선하며 컨텍스트 파일에서 정의를 덮어씁니다."
    },
    "OuterWheelControlGroup": {
      "anyOf": [
        {
          "$ref": "#/$defs/Control"
        },
        {
          "$ref": "#/$defs/ControlGroup"
        },
        {
          "$ref": "#/$defs/_Null"
        }
      ]
    },
    "ButtonStyles": {
      "description": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "toggled": {
              "$ref": "#/$defs/ButtonToggledStyle"
            },
            "idle": {
              "$ref": "#/$defs/ButtonIdleStyle"
            },
            "disabled": {
              "$ref": "#/$defs/ButtonDisabledStyle"
            },
            "pulled": {
              "$ref": "#/$defs/ButtonPulledStyle"
            },
            "default": {
              "$ref": "#/$defs/ButtonDefaultStyle"
            },
            "activated": {
              "$ref": "#/$defs/ButtonActivatedStyle"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 스타일",
      "examples": [
        {},
        {
          "default": {
            "faceImage": {
              "type": "icon",
              "value": "interact"
            }
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyles"
        }
      ],
      "markdownDescription": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다."
    },
    "JoystickMovingStyle": {
      "description": "컨트롤이 `moving` 상태일 때 사용되는 스타일 재정의입니다. `moving` 상태는 컨트롤이 상호작용 중이지만 해당 동작이 아직 실행되지 않은 상태입니다. 상호 작용의 방향을 나타내기 위해 이 상태에서 추가 스타일 요소를 사용할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "outline": {
              "$ref": "#/$defs/JoystickOutlineWithIndicator"
            },
            "knob": {
              "$ref": "#/$defs/Knob"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "제어 이동 스타일",
      "examples": [
        {},
        {
          "knob": {
            "background": {
              "type": "asset",
              "value": "CustomKnobBackgroundImage"
            },
            "stroke": {
              "type": "solid",
              "color": "#0099ffaa"
            },
            "faceImage": {
              "type": "asset",
              "value": "CustomKnobFaceImage"
            }
          },
          "background": {
            "type": "asset",
            "value": "CustomJoystickBackgroundImage"
          }
        },
        {
          "$ref": "#/definitions/commonJoystickStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `moving` 상태일 때 사용되는 스타일 재정의입니다. `moving` 상태는 컨트롤이 상호작용 중이지만 해당 동작이 아직 실행되지 않은 상태입니다. 상호 작용의 방향을 나타내기 위해 이 상태에서 추가 스타일 요소를 사용할 수 있습니다."
    },
    "LayoutActionTarget": {
      "description": "이 속성은 작업이 실행될 때 적용할 계층을 지정합니다. 이 이름은 레이아웃 콘텐츠의 `layers` 속성에 나타나야 합니다.",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^(?!__proto__)[a-zA-Z0-9\\.\\-_]+$"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "레이아웃 작업 대상",
      "examples": [
        "WeaponSelectLayer",
        "AdvancedDrivingLayer",
        {
          "$ref": "../../context.json#/state/playerAdvancedDrivingControlsPreference"
        }
      ],
      "markdownDescription": "이 속성은 작업이 실행될 때 적용할 계층을 지정합니다. 이 이름은 레이아웃 콘텐츠의 `layers` 속성에 나타나야 합니다."
    },
    "DirectionalPadStyles": {
      "description": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "default": {
              "description": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다.",
              "title": "제어 기본 스타일",
              "$ref": "#/$defs/DirectionalPadDefaultStyle",
              "markdownDescription": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다."
            },
            "idle": {
              "description": "컨트롤이 `idle`상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 컨트롤의 중립 또는 휴지 상태입니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 컨트롤이 유휴 상태이고 상호 작용하지 않음을 표시하기 위해 완전히 투명한 그라데이션과 함께 사용됩니다.",
              "title": "유휴 스타일 제어",
              "$ref": "#/$defs/DirectionalPadIdleStyle",
              "markdownDescription": "컨트롤이 `idle`상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 컨트롤의 중립 또는 휴지 상태입니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 컨트롤이 유휴 상태이고 상호 작용하지 않음을 표시하기 위해 완전히 투명한 그라데이션과 함께 사용됩니다."
            },
            "disabled": {
              "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
              "title": "컨트롤 활성화 스타일",
              "$ref": "#/$defs/DirectionalPadIdleStyle",
              "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
            },
            "activated": {
              "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
              "title": "컨트롤 활성화 스타일",
              "$ref": "#/$defs/DirectionalPadDefaultStyle",
              "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 스타일",
      "examples": [
        {},
        {
          "default": {
            "gradient": {
              "color": "#0099ffaa"
            },
            "stroke": {
              "color": "#0099ff",
              "type": "solid",
              "opacity": 1
            }
          }
        },
        {
          "$ref": "#/definitions/commonDPadStyles"
        }
      ],
      "markdownDescription": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다."
    },
    "OuterWheelLayerControlGroup": {
      "anyOf": [
        {
          "$ref": "#/$defs/LayerControl"
        },
        {
          "$ref": "#/$defs/LayerControlGroup"
        },
        {
          "$ref": "#/$defs/_Null"
        }
      ]
    },
    "AssetReference": {
      "description": "자산 참조는 터치 레이아웃과 함께 번들로 제공되는 사용자 지정 자산의 식별자입니다. 전체 파일을 참조하려면 파일 확장자 없이 이미지의 파일 이름을 사용하세요. 스프라이트시트 자산의 경우 확장자가 없는 텍스처 파일 이름을 사용하고 스프라이트 아틀래스 내의 스프라이트 이름과 `/`를 사용합니다. 화면 해상도가 다른 장치를 처리하기 위해 DPI(1.0x, 1.5x, 2.0x, 3.0x, 4.0x)별 파일을 제공해야 합니다. 자산이 사용되는 컨트롤 및 구성 요소에 따라 최대 1.0x 해상도가 다를 수 있지만 60x60 및 120x120이 가장 일반적으로 허용되는 최대값입니다. 다른 모든 DPI 해상도는 1.0x 자산 해상도의 배수여야 합니다.",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^[^/\\.]+$"
        },
        {
          "type": "string",
          "pattern": "^[^/\\.]+/[A-Za-z0-9_]+$"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "자산 참조 스타일링 구성 요소",
      "examples": [
        "JumpImage",
        "SpitesheetTextureFileName/Jump",
        {
          "$ref": "#/definitions/buttonBackgroundAssetValue"
        }
      ],
      "markdownDescription": "자산 참조는 터치 레이아웃과 함께 번들로 제공되는 사용자 지정 자산의 식별자입니다. 전체 파일을 참조하려면 파일 확장자 없이 이미지의 파일 이름을 사용하세요. 스프라이트시트 자산의 경우 확장자가 없는 텍스처 파일 이름을 사용하고 스프라이트 아틀래스 내의 스프라이트 이름과 `/`를 사용합니다. 화면 해상도가 다른 장치를 처리하기 위해 DPI(1.0x, 1.5x, 2.0x, 3.0x, 4.0x)별 파일을 제공해야 합니다. 자산이 사용되는 컨트롤 및 구성 요소에 따라 최대 1.0x 해상도가 다를 수 있지만 60x60 및 120x120이 가장 일반적으로 허용되는 최대값입니다. 다른 모든 DPI 해상도는 1.0x 자산 해상도의 배수여야 합니다."
    },
    "_ControlBase": {
      "anyOf": [
        {
          "$ref": "#/$defs/_Button"
        },
        {
          "$ref": "#/$defs/_Joystick"
        },
        {
          "$ref": "#/$defs/_DirectionalPad"
        },
        {
          "$ref": "#/$defs/_Touchpad"
        },
        {
          "$ref": "#/$defs/_Throttle"
        },
        {
          "$ref": "#/$defs/_ArcadeButtons"
        }
      ],
      "properties": {
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/_ControlTypeArcadeButtons"
            },
            {
              "$ref": "#/$defs/_ControlTypeButton"
            },
            {
              "$ref": "#/$defs/_ControlTypeDirectionalPad"
            },
            {
              "$ref": "#/$defs/_ControlTypeJoystick"
            },
            {
              "$ref": "#/$defs/_ControlTypeThrottle"
            },
            {
              "$ref": "#/$defs/_ControlTypeTouchpad"
            }
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "_ControlTypeThrottle": {
      "description": "보트, 자동차 또는 비행기의 물리적 스로틀을 모방한 스로틀 컨트롤입니다. 이 컨트롤에는 플레이어가 스로틀을 위 또는 아래로 이동하기 위해 상호 작용할 수 있는 노브가 있습니다. 이 컨트롤은 가스를 항상 억제해야 하는 경우가 많은 운전 또는 비행 게임에 가장 유용합니다. 컨트롤의 스타일을 지정할 때 별도의 `activatedUp`, `activatedDown` 및 `idleUp` 상태를 사용하면 플레이어가 가스, 브레이크 등을 사용할 때 정확한 사용자 지정을 표시할 수 있습니다.",
      "title": "스로틀 제어 유형",
      "type": "string",
      "const": "throttle",
      "markdownDescription": "보트, 자동차 또는 비행기의 물리적 스로틀을 모방한 스로틀 컨트롤입니다. 이 컨트롤에는 플레이어가 스로틀을 위 또는 아래로 이동하기 위해 상호 작용할 수 있는 노브가 있습니다. 이 컨트롤은 가스를 항상 억제해야 하는 경우가 많은 운전 또는 비행 게임에 가장 유용합니다. 컨트롤의 스타일을 지정할 때 별도의 `activatedUp`, `activatedDown` 및 `idleUp` 상태를 사용하면 플레이어가 가스, 브레이크 등을 사용할 때 정확한 사용자 지정을 표시할 수 있습니다."
    },
    "_Null": {
      "description": "위치를 건너뛰기 위해 컨트롤 대신 사용할 수 있는 특수 값입니다. 콘트롤 배열과 콘텐츠 배치를 패딩하기 위한 레이어에서 특히 유용합니다.",
      "title": "null",
      "examples": [
        null
      ],
      "type": "null",
      "markdownDescription": "위치를 건너뛰기 위해 컨트롤 대신 사용할 수 있는 특수 값입니다. 콘트롤 배열과 콘텐츠 배치를 패딩하기 위한 레이어에서 특히 유용합니다."
    },
    "_SystemColorAccentPrimary": {
      "description": "이 속성은 ergo-edit 내부 휠과 같은 스타일링 구성 요소에 사용되는 액센트 기본 시스템 색상을 재정의합니다.",
      "title": "악센트 기본 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 ergo-edit 내부 휠과 같은 스타일링 구성 요소에 사용되는 액센트 기본 시스템 색상을 재정의합니다."
    },
    "_InputMappingZYToGamepad2DOutput": {
      "properties": {
        "sensitivity": {
          "$ref": "#/$defs/Sensitivity"
        },
        "output": {
          "$ref": "#/$defs/_ControllerAnalog2DOutputType"
        },
        "input": {
          "$ref": "#/$defs/_InputAxisZY"
        },
        "deadzone": {
          "$ref": "#/$defs/Deadzone2D"
        },
        "responseCurve": {
          "$ref": "#/$defs/InputCurve"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "input",
        "output"
      ]
    },
    "ArcadeButtonStyleBase": {
      "examples": [
        {
          "faceImage": {
            "type": "asset",
            "value": "CustomArcadeButtonFaceImage"
          },
          "background": {
            "type": "asset",
            "value": "CustomArcadeButtonBackgroundImage"
          }
        },
        {
          "$ref": "#/definitions/commonArcadeButtonStyle"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "Deadzone2D": {
      "description": "컨트롤에서 생성된 정규화된 최소 출력 값입니다. 이는 게임에 프로그래밍된 데드존에 대응하는 데 유용합니다. `radial`이 true로 설정되면 데드존이 방사형 구성요소를 따라 1차원적으로 계산됩니다. 그렇지 않으면 각 축은 임계값을 사용하여 개별적으로 계산됩니다. 생략하면 데드존이 사용되지 않습니다.",
      "anyOf": [
        {
          "properties": {
            "threshold": {
              "$ref": "#/$defs/DeadzoneThreshold"
            },
            "radial": {
              "$ref": "#/$defs/DeadzoneRadial"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "threshold",
            "radial"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "2차원 데드존",
      "examples": [
        {
          "threshold": 0,
          "radial": true
        },
        {
          "threshold": 0.1,
          "radial": false
        },
        {
          "$ref": "#/definitions/commonDeadzone"
        }
      ],
      "markdownDescription": "컨트롤에서 생성된 정규화된 최소 출력 값입니다. 이는 게임에 프로그래밍된 데드존에 대응하는 데 유용합니다. `radial`이 true로 설정되면 데드존이 방사형 구성요소를 따라 1차원적으로 계산됩니다. 그렇지 않으면 각 축은 임계값을 사용하여 개별적으로 계산됩니다. 생략하면 데드존이 사용되지 않습니다."
    },
    "DirectionalPadIdleStyle": {
      "examples": [
        {},
        {
          "gradient": {
            "color": "#0099ffaa"
          },
          "stroke": {
            "color": "#0099ff",
            "type": "solid",
            "opacity": 1
          }
        },
        {
          "$ref": "#/definitions/commonDPadStyle"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "fill": {
              "$ref": "#/$defs/FillColor"
            },
            "stroke": {
              "$ref": "#/$defs/Stroke"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_ControllerAnalogMagnitudinalOutputType": {
      "anyOf": [
        {
          "$ref": "#/$defs/_ControllerTriggerOutputType"
        },
        {
          "$ref": "#/$defs/_ControllerAnalogMagnitudinalJoystickOutputType"
        }
      ]
    },
    "AxisMapping2D": {
      "description": "이 속성은 컨트롤과 플레이어의 2차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 매핑 또는 매핑 집합을 정의합니다. 축 할당에 따라 컨트롤의 모양과 느낌이 변경될 수 있습니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_AxisMapping2DItem"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/_AxisMapping2DItem"
          }
        }
      ],
      "title": "2차원 축 매핑",
      "examples": [
        {
          "sensitivity": 0.3,
          "output": "rightJoystick",
          "input": "axisXY"
        },
        {
          "input": "axisXY",
          "output": "relativeMouse"
        },
        [
          {
            "input": "axisUp",
            "output": "rightTrigger"
          },
          {
            "input": "axisDown",
            "output": "leftTrigger"
          }
        ],
        {
          "$ref": "#/definitions/commonAxisMapping"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤과 플레이어의 2차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 매핑 또는 매핑 집합을 정의합니다. 축 할당에 따라 컨트롤의 모양과 느낌이 변경될 수 있습니다."
    },
    "_SingleControlActionAssignableTypes": {
      "anyOf": [
        {
          "$ref": "#/$defs/_ControllerAction"
        },
        {
          "$ref": "#/$defs/_LayoutAction"
        },
        {
          "$ref": "#/$defs/_TurboAction"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_LayerControlBase": {
      "anyOf": [
        {
          "$ref": "#/$defs/_ControlBase"
        },
        {
          "$ref": "#/$defs/_Blank"
        }
      ]
    },
    "OuterLayerControlWheel": {
      "description": "휠에서 레이어 컨트롤 및 레이어 컨트롤 그룹의 외부 링을 정의합니다. 이 속성은 그 아래에 있는 레이어에서 컨트롤을 숨기기 위해 `blank` 컨트롤을 추가로 허용한다는 점을 제외하고 동일한 명명된 레이아웃 속성과 동일하게 작동합니다. 아래 레이어의 컨트롤 또는 컨트롤 그룹에 이 레이어의 해당 인덱스와 다른 항목 수가 있는 경우 해당 레이어의 모든 항목이 숨겨집니다. 기본 레이아웃 휠과 마찬가지로 `null`을 사용하여 컨트롤 또는 컨트롤 그룹을 건너뛸 수 있습니다.",
      "anyOf": [
        {
          "maxItems": 8,
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/OuterWheelLayerControlGroup"
          },
          "type": "array"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "밖의",
      "examples": [
        [],
        [
          {
            "type": "blank"
          },
          [
            null,
            {
              "type": "blank"
            },
            null
          ],
          {
            "type": "button",
            "action": "gamepadX"
          }
        ],
        {
          "$ref": "#/definitions/commonLayerOuterWheel"
        }
      ],
      "markdownDescription": "휠에서 레이어 컨트롤 및 레이어 컨트롤 그룹의 외부 링을 정의합니다. 이 속성은 그 아래에 있는 레이어에서 컨트롤을 숨기기 위해 `blank` 컨트롤을 추가로 허용한다는 점을 제외하고 동일한 명명된 레이아웃 속성과 동일하게 작동합니다. 아래 레이어의 컨트롤 또는 컨트롤 그룹에 이 레이어의 해당 인덱스와 다른 항목 수가 있는 경우 해당 레이어의 모든 항목이 숨겨집니다. 기본 레이아웃 휠과 마찬가지로 `null`을 사용하여 컨트롤 또는 컨트롤 그룹을 건너뛸 수 있습니다."
    },
    "FillColor": {
      "description": "이 속성은 컨트롤 구성 요소를 채울 색상을 변경합니다. 생략하면 대부분 투명한 흰색 채우기가 사용됩니다. 색상은 `hex-color` CSS 사양을 따르는 16진수 값으로 지정하거나 색상 이름이 뒤에 오는 `colors/`로 시작하는 문자열을 사용하여 알려진 시스템 색상 또는 레이아웃 색상을 참조하여 지정해야 합니다. 자세한 내용은 https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color를 참조하세요.",
      "title": "채우다",
      "$ref": "#/$defs/_Color",
      "markdownDescription": "이 속성은 컨트롤 구성 요소를 채울 색상을 변경합니다. 생략하면 대부분 투명한 흰색 채우기가 사용됩니다. 색상은 `hex-color` CSS 사양을 따르는 16진수 값으로 지정하거나 색상 이름이 뒤에 오는 `colors/`로 시작하는 문자열을 사용하여 알려진 시스템 색상 또는 레이아웃 색상을 참조하여 지정해야 합니다. 자세한 내용은 https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color를 참조하세요."
    },
    "_InputMapping3DTo2DOutput": {
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMappingXY"
        },
        {
          "$ref": "#/$defs/_InputMappingZY"
        }
      ]
    },
    "_InputAxisMagnitudinal": {
      "description": "지정된 축 방향(위, 아래, 왼쪽 또는 오른쪽)을 따라 입력의 크기만 사용하여 지정된 출력으로 변환합니다. 예를 들어 `axisLeft` 값은 입력이 현재 제어 원점에서 얼마나 왼쪽에 있는지에 따라 0에서 1로 매핑됩니다. 크기 기반 값이므로 음수 출력이 가능하지 않습니다.",
      "enum": [
        "axisRight",
        "axisLeft",
        "axisUp",
        "axisDown"
      ],
      "title": "축 크기 입력 매핑",
      "type": "string",
      "markdownDescription": "지정된 축 방향(위, 아래, 왼쪽 또는 오른쪽)을 따라 입력의 크기만 사용하여 지정된 출력으로 변환합니다. 예를 들어 `axisLeft` 값은 입력이 현재 제어 원점에서 얼마나 왼쪽에 있는지에 따라 0에서 1로 매핑됩니다. 크기 기반 값이므로 음수 출력이 가능하지 않습니다."
    },
    "_LayoutStyles": {
      "examples": [
        {},
        {
          "colors": {
            "default": {
              "myColor": "#ff0000ff",
              "system_contentPrimary": "#ffffffff"
            },
            "highContrast": {
              "myColor": "#00ff00ff",
              "system_contentPrimary": "#ffffffff"
            }
          }
        },
        {
          "$ref": "../../context.json#/definitions/commonStyles"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "colors": {
              "$ref": "#/$defs/LayoutColors"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "ActionThreshold": {
      "description": "이 속성은 컨트롤 동작을 트리거하는 데 필요한 정규화된 방사형 입력 값을 정의합니다. 이 값에 도달하면 컨트롤이 해당 작업을 실행하고 `moving` 상태에서 `activated` 상태로 전환합니다. 생략하면 기본값 0이 사용됩니다. 즉, 모든 컨트롤 상호 작용이 할당된 작업을 즉시 실행합니다.",
      "anyOf": [
        {
          "type": "number",
          "minimum": 0
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "작업 임계값",
      "examples": [
        1,
        1.5,
        0,
        {
          "$ref": "../../context.json#/state/playerJoystickActionDeadzonePreference"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤 동작을 트리거하는 데 필요한 정규화된 방사형 입력 값을 정의합니다. 이 값에 도달하면 컨트롤이 해당 작업을 실행하고 `moving` 상태에서 `activated` 상태로 전환합니다. 생략하면 기본값 0이 사용됩니다. 즉, 모든 컨트롤 상호 작용이 할당된 작업을 즉시 실행합니다."
    },
    "ControlVisibility": {
      "description": "컨트롤이 표시되는지 여부를 결정합니다. 이 속성은 게임 상태에 따라 컨트롤을 동적으로 표시하고 숨길 수 있도록 컨텍스트 파일 `state`와 함께 사용할 때 가장 유용합니다. 생략하면 기본값 `true`가 사용됩니다. 보이지 않으면 컨트롤을 활성화할 수 없으며 플레이어가 컨트롤이 표시되는 위치를 터치하더라도 어떤 작업도 실행하지 않습니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "표시",
      "examples": [
        true,
        false,
        {
          "$ref": "../../context.json#/state/hasSpellEquipped"
        }
      ],
      "markdownDescription": "컨트롤이 표시되는지 여부를 결정합니다. 이 속성은 게임 상태에 따라 컨트롤을 동적으로 표시하고 숨길 수 있도록 컨텍스트 파일 `state`와 함께 사용할 때 가장 유용합니다. 생략하면 기본값 `true`가 사용됩니다. 보이지 않으면 컨트롤을 활성화할 수 없으며 플레이어가 컨트롤이 표시되는 위치를 터치하더라도 어떤 작업도 실행하지 않습니다."
    },
    "_BackgroundAsset": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "배경의 스타일을 지정하는 데 사용되는 사용자 지정 자산입니다.",
          "type": "string",
          "const": "asset",
          "markdownDescription": "배경의 스타일을 지정하는 데 사용되는 사용자 지정 자산입니다."
        },
        "opacity": {
          "$ref": "#/$defs/Opacity"
        },
        "value": {
          "$ref": "#/$defs/BackgroundAssetValue"
        }
      },
      "examples": [
        {
          "type": "asset",
          "value": "CustomImageFileName"
        }
      ],
      "type": "object",
      "required": [
        "type",
        "value"
      ]
    },
    "Gradient": {
      "description": "그라데이션은 한 색상에서 다른 색상으로의 혼합입니다. 현재 허용되는 유일한 그라데이션은 완전히 투명한 상태에서 제공된 색상 값까지입니다.",
      "anyOf": [
        {
          "properties": {
            "color": {
              "$ref": "#/$defs/Color"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "그라데이션",
      "examples": [
        {
          "color": "#0099ffaa"
        },
        {
          "color": {
            "$ref": "#/definitions/commonColor"
          }
        },
        {
          "$ref": "#/definitions/commonColorGradient"
        }
      ],
      "markdownDescription": "그라데이션은 한 색상에서 다른 색상으로의 혼합입니다. 현재 허용되는 유일한 그라데이션은 완전히 투명한 상태에서 제공된 색상 값까지입니다."
    },
    "InputCurve": {
      "markdownDescription": "⚠️ 사용되지 않음: 이 속성은 동작이 변경되거나 이후 버전에서 제거될 수 있습니다. 이 속성은 입력이 출력 값에 매핑되는 방식의 곡선 또는 함수를 정의합니다. `circular` 또는 `circular-inverse` 유형을 사용하면 각각 오른쪽 아래 사분면 또는 왼쪽 위 사분면의 모양과 일치하는 원형 곡선으로 입력을 매핑할 수 있습니다. 이 속성을 생략하면 기본 선형 매핑이 사용됩니다.",
      "deprecated": true,
      "description": "⚠️ 사용되지 않음: 이 속성은 동작이 변경되거나 이후 버전에서 제거될 수 있습니다. 이 속성은 입력이 출력 값에 매핑되는 방식의 곡선 또는 함수를 정의합니다. `circular` 또는 `circular-inverse` 유형을 사용하면 각각 오른쪽 아래 사분면 또는 왼쪽 위 사분면의 모양과 일치하는 원형 곡선으로 입력을 매핑할 수 있습니다. 이 속성을 생략하면 기본 선형 매핑이 사용됩니다.",
      "title": "[사용되지 않음] 입력 응답 곡선",
      "examples": [
        {
          "type": "circular",
          "range": [
            0,
            0.33
          ]
        },
        {
          "type": "circular-inverse",
          "range": [
            0,
            1
          ]
        },
        {
          "$ref": "#/$defs/commonJoystickResponseCurve"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "type": {
              "$ref": "#/$defs/InputCurveType"
            },
            "range": {
              "$ref": "#/$defs/InputCurveRange"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "range",
            "type"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "LayerLowerContent": {
      "description": "이 속성은 사용 가능한 표시 공간의 아래쪽 가장자리에 고정되는 레이어의 콘텐츠를 정의합니다. 이 속성은 이 속성 아래에 있는 레이어에서 컨트롤을 숨기는 데 `blank` 컨트롤을 사용할 수 있다는 점을 제외하면 레이아웃 콘텐츠의 동일한 명명된 속성과 동일하게 작동합니다.",
      "anyOf": [
        {
          "properties": {
            "center": {
              "$ref": "#/$defs/LayerControl"
            },
            "leftCenter": {
              "$ref": "#/$defs/LayerLowerArrayContent"
            },
            "rightCenter": {
              "$ref": "#/$defs/LayerLowerArrayContent"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "하위 계층 콘텐츠",
      "examples": [
        {
          "center": {
            "type": "blank"
          }
        },
        {
          "leftCenter": [
            {
              "type": "blank"
            }
          ],
          "rightCenter": [
            {
              "type": "blank"
            }
          ]
        },
        {
          "$ref": "../../context.json#/definitions/commonLayerLowerContent"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 공간의 아래쪽 가장자리에 고정되는 레이어의 콘텐츠를 정의합니다. 이 속성은 이 속성 아래에 있는 레이어에서 컨트롤을 숨기는 데 `blank` 컨트롤을 사용할 수 있다는 점을 제외하면 레이아웃 콘텐츠의 동일한 명명된 속성과 동일하게 작동합니다."
    },
    "_InputAxis1D": {
      "anyOf": [
        {
          "description": "컨트롤의 X축을 따라 상호 작용(양수 및 음수 방향)을 사용하여 지정된 출력으로 변환합니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오.",
          "title": "X축 입력 매핑",
          "type": "string",
          "const": "axisX",
          "markdownDescription": "컨트롤의 X축을 따라 상호 작용(양수 및 음수 방향)을 사용하여 지정된 출력으로 변환합니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오."
        },
        {
          "description": "컨트롤의 Y축을 따라 상호 작용을 사용하며, 양수 방향에서는 양수이고 음수이면 지정된 출력으로 변환됩니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오.",
          "title": "Y축 입력 매핑",
          "type": "string",
          "const": "axisY",
          "markdownDescription": "컨트롤의 Y축을 따라 상호 작용을 사용하며, 양수 방향에서는 양수이고 음수이면 지정된 출력으로 변환됩니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오."
        }
      ]
    },
    "Toggle": {
      "description": "이 속성은 컨트롤을 토글 컨트롤로 변경합니다. 더 이상 상호 작용하지 않을 때 `idle` 상태로 돌아가는 대신 컨트롤이 해당 작업이 계속 실행되는 `toggled` 상태로 전환됩니다. 플레이어가 컨트롤과 다시 상호 작용하면 전환이 해제되고 `idle` 상태로 돌아갑니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "토글",
      "examples": [
        true,
        false,
        {
          "$ref": "../../context.json#/state/playerToggleCrouchPreference"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤을 토글 컨트롤로 변경합니다. 더 이상 상호 작용하지 않을 때 `idle` 상태로 돌아가는 대신 컨트롤이 해당 작업이 계속 실행되는 `toggled` 상태로 전환됩니다. 플레이어가 컨트롤과 다시 상호 작용하면 전환이 해제되고 `idle` 상태로 돌아갑니다."
    },
    "_Joystick": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "$ref": "#/$defs/ActionType"
        },
        "relative": {
          "$ref": "#/$defs/RelativeInteraction"
        },
        "type": {
          "$ref": "#/$defs/_ControlTypeJoystick"
        },
        "visible": {
          "$ref": "#/$defs/ControlVisibility"
        },
        "expand": {
          "$ref": "#/$defs/ExpandInteraction"
        },
        "axis": {
          "$ref": "#/$defs/AxisMapping2D"
        },
        "styles": {
          "$ref": "#/$defs/JoystickStyles"
        },
        "actionThreshold": {
          "$ref": "#/$defs/ActionThreshold"
        },
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        }
      },
      "examples": [
        {
          "axis": {
            "input": "axisXY",
            "output": "leftJoystick"
          },
          "type": "joystick",
          "styles": {
            "default": {
              "knob": {
                "faceImage": {
                  "type": "icon",
                  "value": "walk"
                }
              }
            }
          }
        }
      ],
      "type": "object",
      "required": [
        "type",
        "axis"
      ]
    },
    "JoystickActivatedStyle": {
      "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "outline": {
              "$ref": "#/$defs/JoystickOutlineWithIndicator"
            },
            "knob": {
              "$ref": "#/$defs/Knob"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 활성화 스타일",
      "examples": [
        {},
        {
          "knob": {
            "background": {
              "type": "asset",
              "value": "CustomKnobBackgroundImage"
            },
            "stroke": {
              "type": "solid",
              "color": "#0099ffaa"
            },
            "faceImage": {
              "type": "asset",
              "value": "CustomKnobFaceImage"
            }
          },
          "background": {
            "type": "asset",
            "value": "CustomJoystickBackgroundImage"
          }
        },
        {
          "$ref": "#/definitions/commonJoystickStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
    },
    "TouchpadStyleBase": {
      "examples": [
        {
          "faceImage": {
            "type": "icon",
            "value": "look"
          }
        },
        {
          "$ref": "#/definitions/commonTouchpadStyling"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_RelativeMouseMagnitudinalOutputType": {
      "description": "이 출력 유형은 지정된 입력 축을 따라 제어 입력의 크기를 취하여 한 방향으로 상대적인 마우스 움직임에 매핑합니다. 예를 들어 조이스틱의 X축 이동이 상대적인 마우스 X축 출력에 매핑된 경우 조이스틱이 오른쪽으로 유지되는 동안 일련의 긍정적인 X 방향 마우스 이동이 전송됩니다.",
      "enum": [
        "relativeMouseUp",
        "relativeMouseDown",
        "relativeMouseLeft",
        "relativeMouseRight"
      ],
      "title": "상대 마우스 방향 방향 출력",
      "type": "string",
      "markdownDescription": "이 출력 유형은 지정된 입력 축을 따라 제어 입력의 크기를 취하여 한 방향으로 상대적인 마우스 움직임에 매핑합니다. 예를 들어 조이스틱의 X축 이동이 상대적인 마우스 X축 출력에 매핑된 경우 조이스틱이 오른쪽으로 유지되는 동안 일련의 긍정적인 X 방향 마우스 이동이 전송됩니다."
    },
    "JoystickOutlineWithIndicator": {
      "description": "상호 작용 방향에 대한 표시기가 있는 컨트롤 개요의 시각적 스타일입니다. 다른 상태의 이 속성에는 컨트롤이 해당 상태에서 상호 작용하지 않기 때문에 표시기의 스타일을 지정하는 기능이 포함되지 않을 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "indicator": {
              "$ref": "#/$defs/JoystickDirectionIndicator"
            },
            "stroke": {
              "$ref": "#/$defs/Stroke"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "아웃라인 스타일링 구성 요소",
      "examples": [
        {
          "indicator": {
            "type": "color",
            "value": "#0099ffaa"
          },
          "stroke": {
            "type": "solid",
            "color": "#0099ffaa"
          }
        },
        {
          "$ref": "#/definitions/commonOutlineStyling"
        }
      ],
      "markdownDescription": "상호 작용 방향에 대한 표시기가 있는 컨트롤 개요의 시각적 스타일입니다. 다른 상태의 이 속성에는 컨트롤이 해당 상태에서 상호 작용하지 않기 때문에 표시기의 스타일을 지정하는 기능이 포함되지 않을 수 있습니다."
    },
    "_ControlTypeJoystick": {
      "description": "물리적 컨트롤러의 아날로그 조이스틱을 모방한 조이스틱 컨트롤입니다. 이를 통해 플레이어는 `axis` 속성을 기반으로 2차원 또는 1차원 공간에서 컨트롤을 이동할 수 있습니다. 또한 `action` 및 `actionThreshold` 속성을 사용하여 동작과 함께 동시 동작을 수행할 수 있습니다. 이 컨트롤은 플레이어 이동 또는 카메라 컨트롤에 자주 사용되며 조준이나 사격과 같이 이동하거나 둘러보는 동안 수행할 수 있는 모든 작업에 대해 여러 조이스틱을 포함하는 터치 레이아웃이 일반적입니다.",
      "title": "조이스틱 제어 유형",
      "type": "string",
      "const": "joystick",
      "markdownDescription": "물리적 컨트롤러의 아날로그 조이스틱을 모방한 조이스틱 컨트롤입니다. 이를 통해 플레이어는 `axis` 속성을 기반으로 2차원 또는 1차원 공간에서 컨트롤을 이동할 수 있습니다. 또한 `action` 및 `actionThreshold` 속성을 사용하여 동작과 함께 동시 동작을 수행할 수 있습니다. 이 컨트롤은 플레이어 이동 또는 카메라 컨트롤에 자주 사용되며 조준이나 사격과 같이 이동하거나 둘러보는 동안 수행할 수 있는 모든 작업에 대해 여러 조이스틱을 포함하는 터치 레이아웃이 일반적입니다."
    },
    "ColorPaletteDefaultVariant": {
      "description": "이 속성은 다른 곳에서 참조할 수 있는 재사용 가능한 색상 모음을 정의합니다. 색상 정의는 레이아웃의 내용에 따라 다르거나 시스템의 기본 색상을 재정의할 수 있습니다. 시스템 색상에는 예약된 `system_` 키워드가 접두사로 붙습니다. 특정 변형에 정의되지 않은 색상 또는 특정 변형이 활성화되지 않은 경우 해당 색상 참조는 여기에 정의된 색상으로 대체됩니다. 지정된 시스템 색상 재지정이 지정되지 않은 경우 색상 참조는 시스템의 기본 색상으로 대체됩니다. 색상은 스타일 지정 목적으로 색상을 사용할 수 있는 영역에서 색상 이름 앞에 `colors/` 접두사를 사용하여 참조할 수 있습니다.",
      "title": "기본 색상",
      "$ref": "#/$defs/_ColorPaletteBase",
      "markdownDescription": "이 속성은 다른 곳에서 참조할 수 있는 재사용 가능한 색상 모음을 정의합니다. 색상 정의는 레이아웃의 내용에 따라 다르거나 시스템의 기본 색상을 재정의할 수 있습니다. 시스템 색상에는 예약된 `system_` 키워드가 접두사로 붙습니다. 특정 변형에 정의되지 않은 색상 또는 특정 변형이 활성화되지 않은 경우 해당 색상 참조는 여기에 정의된 색상으로 대체됩니다. 지정된 시스템 색상 재지정이 지정되지 않은 경우 색상 참조는 시스템의 기본 색상으로 대체됩니다. 색상은 스타일 지정 목적으로 색상을 사용할 수 있는 영역에서 색상 이름 앞에 `colors/` 접두사를 사용하여 참조할 수 있습니다."
    },
    "InnerLayoutControlWheel": {
      "description": "컨트롤 휠의 내부 세그먼트에 그룹으로 배열된 1~4개의 컨트롤 세트. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 전체 내부 세그먼트의 상호 작용 영역은 할당된 컨트롤 간에 균등하게 분할됩니다.",
      "anyOf": [
        {
          "maxItems": 4,
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/Control"
          },
          "type": "array"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "내부",
      "examples": [
        [],
        [
          {
            "type": "joystick",
            "axis": {
              "input": "axisXY",
              "output": "leftJoystick"
            }
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonLeftInnerWheelForDrivingLayouts"
        }
      ],
      "markdownDescription": "컨트롤 휠의 내부 세그먼트에 그룹으로 배열된 1~4개의 컨트롤 세트. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 전체 내부 세그먼트의 상호 작용 영역은 할당된 컨트롤 간에 균등하게 분할됩니다."
    },
    "SensorControl": {
      "markdownDescription": "장치의 사용 가능한 센서에서 상호 작용을 가져와 출력으로 변환하는 보이지 않는 개별 컨트롤입니다. 특정 컨트롤 유형 및 목적에 대한 정보는 `type` 속성을 참조하세요.",
      "description": "장치의 사용 가능한 센서에서 상호 작용을 가져와 출력으로 변환하는 보이지 않는 개별 컨트롤입니다. 특정 컨트롤 유형 및 목적에 대한 정보는 `type` 속성을 참조하세요.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "accelerometer",
            "gyroscope"
          ]
        }
      },
      "title": "센서 제어",
      "examples": [
        {
          "$ref": "../../context.json#/definitions/commonGyroscopeControl"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/$defs/_Accelerometer"
        },
        {
          "$ref": "#/$defs/_Gyroscope"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "_BackgroundColor": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "배경의 스타일을 지정하는 데 사용되는 색입니다. 색이 사용되는 정확한 셰이프는 구성 요소에 따라 달라지며 사용자 지정할 수 없습니다.",
          "type": "string",
          "const": "color",
          "markdownDescription": "배경의 스타일을 지정하는 데 사용되는 색입니다. 색이 사용되는 정확한 셰이프는 구성 요소에 따라 달라지며 사용자 지정할 수 없습니다."
        },
        "opacity": {
          "$ref": "#/$defs/Opacity"
        },
        "value": {
          "$ref": "#/$defs/Color"
        }
      },
      "examples": [
        {
          "type": "color",
          "value": "#0099ffaa"
        }
      ],
      "type": "object",
      "required": [
        "type",
        "value"
      ]
    },
    "ThrottleStyleBase": {
      "examples": [
        {
          "axisUp": {
            "cap": {
              "type": "color",
              "value": "#0099ffaa"
            },
            "stroke": {
              "color": "#0099ff",
              "type": "solid",
              "opacity": 1
            }
          },
          "axisDown": {
            "cap": {
              "type": "color",
              "value": "#0099ffaa"
            },
            "stroke": {
              "color": "#0099ff",
              "type": "solid",
              "opacity": 1
            }
          },
          "knob": {
            "background": {
              "type": "asset",
              "value": "CustomKnobBackgroundImage"
            },
            "stroke": {
              "type": "solid",
              "color": "#0099ffaa"
            },
            "faceImage": {
              "type": "asset",
              "value": "CustomKnobFaceImage"
            }
          }
        }
      ],
      "anyOf": [
        {
          "properties": {
            "indicator": {
              "$ref": "#/$defs/Indicator"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "axisUp": {
              "$ref": "#/$defs/ThrottleAxisStyle"
            },
            "axisDown": {
              "$ref": "#/$defs/ThrottleAxisStyle"
            },
            "knob": {
              "$ref": "#/$defs/Knob"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "Sticky": {
      "description": "플레이어가 컨트롤과의 상호 작용을 중지하면 컨트롤이 다시 중립 위치로 돌아가면 이 속성이 변경됩니다. 설정된 경우에도 `axisDown` 영역에 고정 스로틀이 남아 있지 않습니다. 예를 들어 크루즈 컨트롤 스타일 기능을 구현하는 데 사용할 수 있습니다. 생략하면 기본값 `false`가 사용됩니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "접착식",
      "examples": [
        true,
        false,
        {
          "$ref": "../../context.json#/state/playerCruiseControlPreference"
        }
      ],
      "markdownDescription": "플레이어가 컨트롤과의 상호 작용을 중지하면 컨트롤이 다시 중립 위치로 돌아가면 이 속성이 변경됩니다. 설정된 경우에도 `axisDown` 영역에 고정 스로틀이 남아 있지 않습니다. 예를 들어 크루즈 컨트롤 스타일 기능을 구현하는 데 사용할 수 있습니다. 생략하면 기본값 `false`가 사용됩니다."
    },
    "RenderAsButton": {
      "description": "이 속성을 사용하면 컨트롤이 단추로 시각적으로 표시됩니다. 생략하면 `false` 기본값이 사용됩니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "버튼으로 렌더링",
      "examples": [
        true,
        false,
        {
          "$ref": "#/definitions/commonRenderAsButton"
        }
      ],
      "markdownDescription": "이 속성을 사용하면 컨트롤이 단추로 시각적으로 표시됩니다. 생략하면 `false` 기본값이 사용됩니다."
    },
    "_ColorReference": {
      "type": "string",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^colors/(?!system_)[a-zA-Z0-9\\.\\-_]+$"
        },
        {
          "type": "string",
          "enum": [
            "colors/system_contentPrimary",
            "colors/system_contentSecondary",
            "colors/system_contrastPrimary",
            "colors/system_contrastSecondary",
            "colors/system_actionColorDefault",
            "colors/system_actionColorA",
            "colors/system_actionColorB",
            "colors/system_actionColorX",
            "colors/system_actionColorY",
            "colors/system_accentPrimary",
            "colors/system_accentSecondary"
          ]
        }
      ]
    },
    "_Button": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        },
        "pullAction": {
          "$ref": "#/$defs/PullActionType"
        },
        "visible": {
          "$ref": "#/$defs/ControlVisibility"
        },
        "toggle": {
          "$ref": "#/$defs/Toggle"
        },
        "styles": {
          "$ref": "#/$defs/ButtonStyles"
        },
        "type": {
          "$ref": "#/$defs/_ControlTypeButton"
        },
        "action": {
          "$ref": "#/$defs/ActionType"
        }
      },
      "examples": [
        {
          "action": "gamepadA",
          "type": "button",
          "styles": {
            "default": {
              "faceImage": {
                "type": "icon",
                "value": "interact"
              }
            }
          }
        }
      ],
      "type": "object",
      "required": [
        "type",
        "action"
      ]
    },
    "JoystickDirectionIndicator": {
      "description": "상호 작용 방향을 나타내는 시각적 스타일 지정",
      "anyOf": [
        {
          "properties": {
            "type": {
              "description": "방향 표시기가 값을 사용자 지정할 수 있는 색 형식으로 지정하도록 지정하는 데 사용되는 속성입니다.",
              "type": "string",
              "const": "color",
              "markdownDescription": "방향 표시기가 값을 사용자 지정할 수 있는 색 형식으로 지정하도록 지정하는 데 사용되는 속성입니다."
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "value": {
              "$ref": "#/$defs/Color"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "type",
            "value"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "방향 표시기 스타일링 구성 요소",
      "examples": [
        {
          "type": "color",
          "value": "#0099ffaa"
        },
        {
          "$ref": "#/definitions/commonIndicatorStyling"
        }
      ],
      "markdownDescription": "상호 작용 방향을 나타내는 시각적 스타일 지정"
    },
    "Color": {
      "description": "이 속성은 문자열 표현을 사용하여 색상을 정의합니다. 색상은 `hex-color` CSS 사양을 따르는 16진수 값으로 지정하거나 색상 이름이 뒤에 오는 `colors/`로 시작하는 문자열을 사용하여 알려진 시스템 색상 또는 레이아웃 색상을 참조하여 지정해야 합니다. 자세한 내용은 https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color를 참조하세요.",
      "title": "색상",
      "$ref": "#/$defs/_Color",
      "markdownDescription": "이 속성은 문자열 표현을 사용하여 색상을 정의합니다. 색상은 `hex-color` CSS 사양을 따르는 16진수 값으로 지정하거나 색상 이름이 뒤에 오는 `colors/`로 시작하는 문자열을 사용하여 알려진 시스템 색상 또는 레이아웃 색상을 참조하여 지정해야 합니다. 자세한 내용은 https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color를 참조하세요."
    },
    "OuterLayoutControlWheel": {
      "description": "휠의 외부 링에 있는 컨트롤 또는 컨트롤 그룹의 외부 링을 정의합니다. 각 인덱스는 단일 컨트롤이거나 컨트롤 배열일 수 있습니다. 배열이 지정되면 이 컨트롤 그룹은 상호 작용 공간을 두 배로 늘리고 추가된 컨트롤은 휠 중앙에서 더 멀리 확장될 수 있습니다. 전체적으로 외부 휠에는 8개의 개별 컨트롤 또는 4개의 컨트롤 그룹을 위한 공간이 있습니다. 이를 초과하는 모든 컨트롤은 제거되거나 유효성 검사 규칙 실패를 유발할 수 있습니다. `null` 컨트롤은 컨트롤 그룹을 오프셋하기 위해 바깥쪽 휠 배열의 시작 부분에서 사용할 수 있습니다. 이 작업이 완료되면 최종 개별 컨트롤을 추가할 수 있습니다.",
      "anyOf": [
        {
          "maxItems": 8,
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/OuterWheelControlGroup"
          },
          "type": "array"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "밖의",
      "examples": [
        [],
        [
          null,
          [
            {
              "type": "button",
              "action": "gamepadX"
            }
          ],
          {
            "type": "button",
            "action": "gamepadY"
          }
        ],
        {
          "$ref": "#/definitions/commonLayerOuterWheel"
        }
      ],
      "markdownDescription": "휠의 외부 링에 있는 컨트롤 또는 컨트롤 그룹의 외부 링을 정의합니다. 각 인덱스는 단일 컨트롤이거나 컨트롤 배열일 수 있습니다. 배열이 지정되면 이 컨트롤 그룹은 상호 작용 공간을 두 배로 늘리고 추가된 컨트롤은 휠 중앙에서 더 멀리 확장될 수 있습니다. 전체적으로 외부 휠에는 8개의 개별 컨트롤 또는 4개의 컨트롤 그룹을 위한 공간이 있습니다. 이를 초과하는 모든 컨트롤은 제거되거나 유효성 검사 규칙 실패를 유발할 수 있습니다. `null` 컨트롤은 컨트롤 그룹을 오프셋하기 위해 바깥쪽 휠 배열의 시작 부분에서 사용할 수 있습니다. 이 작업이 완료되면 최종 개별 컨트롤을 추가할 수 있습니다."
    },
    "_AxisMapping3DItem": {
      "description": "이 속성은 컨트롤과 플레이어의 3차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 단일 매핑을 정의합니다. 장치 센서와 같은 3차원 상호 작용의 경우 좌표 공간은 항상 게임의 비디오를 기준으로 합니다. 즉, 양의 X 방향은 영상의 오른쪽, 양의 Y 방향은 영상의 상단, 양의 Z 방향은 영상에서 플레이어를 향하도록 하는 것입니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMapping3DTo2DOutput"
        },
        {
          "$ref": "#/$defs/_AxisMapping2DItem"
        }
      ],
      "title": "3차원 축 매핑 항목",
      "examples": [
        {
          "sensitivity": 0.3,
          "output": "rightJoystick",
          "input": "axisXY"
        },
        {
          "input": "axisUp",
          "output": "rightTrigger"
        },
        {
          "$ref": "#/definitions/commonAxisMapping"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤과 플레이어의 3차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 단일 매핑을 정의합니다. 장치 센서와 같은 3차원 상호 작용의 경우 좌표 공간은 항상 게임의 비디오를 기준으로 합니다. 즉, 양의 X 방향은 영상의 오른쪽, 양의 Y 방향은 영상의 상단, 양의 Z 방향은 영상에서 플레이어를 향하도록 하는 것입니다."
    },
    "_RelativeMouse1DOutputType": {
      "description": "이 출력 유형은 1차원 제어 입력을 받아 단일 축을 따라 상대적인 마우스 움직임으로 변환합니다.",
      "enum": [
        "relativeMouseX",
        "relativeMouseY"
      ],
      "title": "상대 마우스 1차원 출력",
      "type": "string",
      "markdownDescription": "이 출력 유형은 1차원 제어 입력을 받아 단일 축을 따라 상대적인 마우스 움직임으로 변환합니다."
    },
    "_InputMapping1D": {
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMapping1DToGamepad1DOutput"
        },
        {
          "$ref": "#/$defs/_InputMapping1DToRelativeMouse1DOutput"
        }
      ]
    },
    "ArcadeButton": {
      "description": "`arcadeButtons` 컨트롤 유형의 단일 버튼입니다. 이 버튼은 아케이드 버튼 배열에서 잘 작동하도록 `button` 컨트롤 유형의 단순화된 버전입니다.",
      "anyOf": [
        {
          "properties": {
            "action": {
              "$ref": "#/$defs/ActionType"
            },
            "enabled": {
              "$ref": "#/$defs/ControlEnabled"
            },
            "visible": {
              "$ref": "#/$defs/ControlVisibility"
            },
            "styles": {
              "$ref": "#/$defs/ArcadeButtonStyles"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "action"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "examples": [
        {
          "action": "gamepadX",
          "styles": {
            "default": {
              "faceImage": {
                "type": "icon",
                "value": "lightPunch"
              }
            }
          }
        },
        {
          "$ref": "../../context.json#/definitions/commonFightingButtons"
        }
      ],
      "markdownDescription": "`arcadeButtons` 컨트롤 유형의 단일 버튼입니다. 이 버튼은 아케이드 버튼 배열에서 잘 작동하도록 `button` 컨트롤 유형의 단순화된 버전입니다."
    },
    "Deadzone1D": {
      "description": "컨트롤에서 생성된 정규화된 최소 출력 값입니다. 이는 게임에 프로그래밍된 데드존에 대응하는 데 유용합니다. 생략하면 데드존이 사용되지 않습니다.",
      "anyOf": [
        {
          "properties": {
            "threshold": {
              "$ref": "#/$defs/DeadzoneThreshold"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "threshold"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "1차원 데드존",
      "examples": [
        {
          "threshold": 0
        },
        {
          "threshold": 0.1
        },
        {
          "$ref": "#/definitions/commonDeadzone"
        }
      ],
      "markdownDescription": "컨트롤에서 생성된 정규화된 최소 출력 값입니다. 이는 게임에 프로그래밍된 데드존에 대응하는 데 유용합니다. 생략하면 데드존이 사용되지 않습니다."
    },
    "Layer": {
      "description": "이 속성을 사용하면 다른 컨트롤의 플레이어 작업에 대한 응답으로 추가 컨트롤을 오버레이하거나 레이아웃 콘텐츠를 변경하기 위해 컨트롤 `action`에서 사용할 수 있는 사용자 지정 컨트롤 레이어를 정의할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "lower": {
              "$ref": "#/$defs/LayerLowerContent"
            },
            "upper": {
              "$ref": "#/$defs/LayerUpperContent"
            },
            "left": {
              "$ref": "#/$defs/LayerControlWheel"
            },
            "center": {
              "$ref": "#/$defs/LayerControlWheel",
              "deprecated": true
            },
            "right": {
              "$ref": "#/$defs/LayerControlWheel"
            },
            "sensors": {
              "$ref": "#/$defs/LayerSensorContent"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 레이어",
      "examples": [
        {
          "left": {
            "inner": [
              {
                "sticky": true,
                "axisUp": "rightTrigger",
                "type": "throttle",
                "axisDown": "leftTrigger"
              }
            ]
          }
        },
        {
          "$ref": "../../context.json#/definitions/commonLayerForDrivingLayouts"
        }
      ],
      "markdownDescription": "이 속성을 사용하면 다른 컨트롤의 플레이어 작업에 대한 응답으로 추가 컨트롤을 오버레이하거나 레이아웃 콘텐츠를 변경하기 위해 컨트롤 `action`에서 사용할 수 있는 사용자 지정 컨트롤 레이어를 정의할 수 있습니다."
    },
    "LayerControlWheel": {
      "description": "원 또는 바퀴 모양으로 구성된 레이어 컨트롤 세트입니다.",
      "anyOf": [
        {
          "properties": {
            "outer": {
              "$ref": "#/$defs/OuterLayerControlWheel"
            },
            "inner": {
              "$ref": "#/$defs/InnerLayerControlWheel"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "레이아웃 레이어 컨트롤 휠 터치",
      "examples": [
        {
          "outer": [
            {
              "type": "blank"
            },
            [
              null,
              {
                "type": "blank"
              },
              null
            ],
            {
              "type": "button",
              "action": "gamepadX"
            }
          ],
          "inner": [
            null,
            {
              "type": "blank"
            }
          ]
        },
        {
          "$ref": "#/definitions/commonWheelDefinitions"
        }
      ],
      "markdownDescription": "원 또는 바퀴 모양으로 구성된 레이어 컨트롤 세트입니다."
    },
    "_Accelerometer": {
      "additionalProperties": false,
      "properties": {
        "axis": {
          "$ref": "#/$defs/AxisMapping3D"
        },
        "type": {
          "description": "가속도계 컨트롤입니다 컨트롤을 사용하면 장치의 동작, 특히 가속도를 게임 입력으로 변환할 수 있습니다.",
          "title": "가속도계 제어 유형",
          "type": "string",
          "const": "accelerometer",
          "markdownDescription": "가속도계 컨트롤입니다 컨트롤을 사용하면 장치의 동작, 특히 가속도를 게임 입력으로 변환할 수 있습니다."
        },
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        }
      },
      "examples": [
        {
          "type": "accelerometer",
          "axis": {
            "input": "axisXY",
            "output": "leftJoystick"
          }
        }
      ],
      "type": "object",
      "required": [
        "type",
        "axis"
      ]
    },
    "ButtonPulledStyle": {
      "description": "컨트롤이 `pulled` 상태일 때 사용되는 스타일 재정의입니다. `pulled` 상태는 컨트롤이 상호 작용되고 컨트롤의 범위를 벗어나서 사용되어 추가 작업이 실행될 때입니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "pullIndicator": {
              "$ref": "#/$defs/PullIndicator"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "끌어온 컨트롤 스타일",
      "examples": [
        {},
        {
          "faceImage": {
            "type": "icon",
            "value": "interact"
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `pulled` 상태일 때 사용되는 스타일 재정의입니다. `pulled` 상태는 컨트롤이 상호 작용되고 컨트롤의 범위를 벗어나서 사용되어 추가 작업이 실행될 때입니다."
    },
    "Scale": {
      "description": "컨트롤 크기를 변경하는 데 사용되는 승수 값입니다. 이 값은 0.5에서 2 사이여야 합니다. 생략하면 기본값 1이 사용됩니다.",
      "anyOf": [
        {
          "minimum": 0.5,
          "type": "number",
          "maximum": 2
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "규모",
      "examples": [
        1,
        1.5,
        0.5,
        {
          "$ref": "../../context.json#/state/playerControlSizePreference"
        }
      ],
      "markdownDescription": "컨트롤 크기를 변경하는 데 사용되는 승수 값입니다. 이 값은 0.5에서 2 사이여야 합니다. 생략하면 기본값 1이 사용됩니다."
    },
    "JoystickOutlineWithoutIndicator": {
      "description": "컨트롤 개요의 시각적 스타일입니다. 이 속성은 컨트롤이 상호 작용하는 다른 상태에서 상호 작용 방향에 대한 표시기의 스타일을 지정하는 기능도 포함할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "stroke": {
              "$ref": "#/$defs/Stroke"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "아웃라인 스타일링 구성 요소",
      "examples": [
        {
          "stroke": {
            "type": "solid",
            "color": "#0099ffaa"
          }
        },
        {
          "$ref": "#/definitions/commonOutlineStyling"
        }
      ],
      "markdownDescription": "컨트롤 개요의 시각적 스타일입니다. 이 속성은 컨트롤이 상호 작용하는 다른 상태에서 상호 작용 방향에 대한 표시기의 스타일을 지정하는 기능도 포함할 수 있습니다."
    },
    "JoystickDefaultStyle": {
      "description": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "outline": {
              "$ref": "#/$defs/JoystickOutlineWithIndicator"
            },
            "knob": {
              "$ref": "#/$defs/Knob"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "제어 기본 스타일",
      "examples": [
        {},
        {
          "knob": {
            "background": {
              "type": "asset",
              "value": "CustomKnobBackgroundImage"
            },
            "stroke": {
              "type": "solid",
              "color": "#0099ffaa"
            },
            "faceImage": {
              "type": "asset",
              "value": "CustomKnobFaceImage"
            }
          },
          "background": {
            "type": "asset",
            "value": "CustomJoystickBackgroundImage"
          }
        },
        {
          "$ref": "#/definitions/commonJoystickStyle"
        }
      ],
      "markdownDescription": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다."
    },
    "TurboActionInterval": {
      "markdownDescription": "이 속성은 전체 작업이 실행되는 동안 할당된 하위 작업이 켜지고 꺼지는 정기적인 간격 또는 기간(밀리초)을 정의합니다.",
      "description": "이 속성은 전체 작업이 실행되는 동안 할당된 하위 작업이 켜지고 꺼지는 정기적인 간격 또는 기간(밀리초)을 정의합니다.",
      "exclusiveMinimum": 0,
      "title": "간격",
      "examples": [
        500,
        1000
      ],
      "type": "number"
    },
    "InputCurveRange": {
      "markdownDescription": "⚠️ 사용되지 않음: 이 속성은 동작을 변경하거나 이후 버전에서 제거될 수 있습니다. 이 속성은 최소값과 최대값을 정의합니다. 모든 값이 정규화되었으므로 -1에서 1 사이여야 합니다.",
      "deprecated": true,
      "description": "⚠️ 사용되지 않음: 이 속성은 동작을 변경하거나 이후 버전에서 제거될 수 있습니다. 이 속성은 최소값과 최대값을 정의합니다. 모든 값이 정규화되었으므로 -1에서 1 사이여야 합니다.",
      "title": "[사용되지 않음] 입력 곡선 범위",
      "examples": [
        [
          0,
          0.33
        ],
        [
          0,
          1
        ],
        {
          "$ref": "#/definitions/commonJoystickInputRange"
        },
        [
          {
            "$ref": "#/definitions/commonJoystickInputRangeMin"
          },
          {
            "$ref": "#/definitions/commonJoystickInputRangeMax"
          }
        ]
      ],
      "anyOf": [
        {
          "maxItems": 2,
          "minItems": 2,
          "items": {
            "anyOf": [
              {
                "minimum": -1,
                "type": "number",
                "maximum": 1
              },
              {
                "$ref": "#/$defs/Reference"
              }
            ]
          },
          "type": "array"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "LayoutContent": {
      "description": "이 속성은 레이아웃의 실제 콘텐츠를 정의합니다. 레이아웃의 콘텐츠는 `lower`와 같이 표시되어야 하는 디스플레이 위치에 따라 컨테이너로 구성됩니다. `left` 및 `right` 영역은 플레이어의 엄지손가락 아래 중앙에 위치하도록 되어 있고 플레이어가 자신의 장치와 선호하는 플레이 방식에 가장 잘 맞도록 이동하고 사용자 정의할 수 있기 때문에 특별한 위치입니다. 버튼과 같은 각 컨테이너 컨트롤 내에서 명명된 속성 또는 하위 배열을 기반으로 하위 컨테이너에 직접 지정하거나 배치할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "left": {
              "$ref": "#/$defs/LayoutControlWheel"
            },
            "lower": {
              "$ref": "#/$defs/LayoutLowerContent"
            },
            "upper": {
              "$ref": "#/$defs/LayoutUpperContent"
            },
            "layers": {
              "$ref": "#/$defs/Layers"
            },
            "center": {
              "$ref": "#/$defs/LayoutControlWheel",
              "deprecated": true
            },
            "right": {
              "$ref": "#/$defs/LayoutControlWheel"
            },
            "sensors": {
              "$ref": "#/$defs/LayerSensorContent"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "레이아웃 콘텐츠",
      "examples": [
        {},
        {
          "left": {
            "inner": [
              {
                "type": "joystick",
                "axis": {
                  "input": "axisXY",
                  "output": "leftJoystick"
                }
              }
            ]
          },
          "right": {
            "outer": [
              {
                "type": "button",
                "action": "gamepadY"
              }
            ]
          }
        }
      ],
      "markdownDescription": "이 속성은 레이아웃의 실제 콘텐츠를 정의합니다. 레이아웃의 콘텐츠는 `lower`와 같이 표시되어야 하는 디스플레이 위치에 따라 컨테이너로 구성됩니다. `left` 및 `right` 영역은 플레이어의 엄지손가락 아래 중앙에 위치하도록 되어 있고 플레이어가 자신의 장치와 선호하는 플레이 방식에 가장 잘 맞도록 이동하고 사용자 정의할 수 있기 때문에 특별한 위치입니다. 버튼과 같은 각 컨테이너 컨트롤 내에서 명명된 속성 또는 하위 배열을 기반으로 하위 컨테이너에 직접 지정하거나 배치할 수 있습니다."
    },
    "LayoutLowerContent": {
      "description": "이 속성은 사용 가능한 표시 공간의 아래쪽 가장자리에 고정되는 레이아웃의 콘텐츠를 정의합니다. 아래쪽 가장자리를 따라 있는 콘텐츠는 중앙에 배치되고 왼쪽 및 오른쪽 가장자리를 향해 바깥쪽으로 커집니다. 이 콘텐츠는 디스플레이 중앙에 있기 때문에 더 큰 장치에서는 도달하기 어려울 수 있습니다. 따라서 카메라 모드 전환이나 다른 모드 전환과 같이 자주 사용하지 않는 컨트롤을 이 공간에 배치하는 것이 좋습니다.",
      "anyOf": [
        {
          "properties": {
            "center": {
              "$ref": "#/$defs/Control"
            },
            "leftCenter": {
              "$ref": "#/$defs/LayoutLowerArrayContent"
            },
            "rightCenter": {
              "$ref": "#/$defs/LayoutLowerArrayContent"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "하위 레이아웃 콘텐츠",
      "examples": [
        {
          "center": {
            "type": "button",
            "action": "dPadDown"
          }
        },
        {
          "leftCenter": [
            {
              "type": "button",
              "action": "dPadLeft"
            }
          ],
          "rightCenter": [
            {
              "type": "button",
              "action": "dPadRight"
            }
          ]
        },
        {
          "$ref": "../../context.json#/definitions/commonLayoutLowerContent"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 공간의 아래쪽 가장자리에 고정되는 레이아웃의 콘텐츠를 정의합니다. 아래쪽 가장자리를 따라 있는 콘텐츠는 중앙에 배치되고 왼쪽 및 오른쪽 가장자리를 향해 바깥쪽으로 커집니다. 이 콘텐츠는 디스플레이 중앙에 있기 때문에 더 큰 장치에서는 도달하기 어려울 수 있습니다. 따라서 카메라 모드 전환이나 다른 모드 전환과 같이 자주 사용하지 않는 컨트롤을 이 공간에 배치하는 것이 좋습니다."
    },
    "_AxisMapping2DItem": {
      "description": "이 속성은 컨트롤과 플레이어의 2차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 단일 매핑을 정의합니다. 축 할당에 따라 컨트롤의 모양과 느낌이 변경될 수 있습니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMapping2D"
        },
        {
          "$ref": "#/$defs/_InputMapping1D"
        },
        {
          "$ref": "#/$defs/_InputMappingMagnitudinal"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "2차원 축 매핑 항목",
      "examples": [
        {
          "sensitivity": 0.3,
          "output": "rightJoystick",
          "input": "axisXY"
        },
        {
          "input": "axisUp",
          "output": "rightTrigger"
        },
        {
          "$ref": "#/definitions/commonAxisMapping"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤과 플레이어의 2차원 아날로그 상호 작용에서 1차원 또는 2차원 출력으로의 단일 매핑을 정의합니다. 축 할당에 따라 컨트롤의 모양과 느낌이 변경될 수 있습니다."
    },
    "DeadzoneThreshold": {
      "description": "출력 값을 생성하는 데 필요한 정규화된 입력 값입니다.",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "임계값",
      "examples": [
        0.5,
        1,
        0,
        {
          "$ref": "#/definitions/commonDeadzoneThreshold"
        }
      ],
      "markdownDescription": "출력 값을 생성하는 데 필요한 정규화된 입력 값입니다."
    },
    "JoystickDisabledStyle": {
      "description": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "outline": {
              "$ref": "#/$defs/JoystickOutlineWithoutIndicator"
            },
            "knob": {
              "$ref": "#/$defs/Knob"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 비활성화 스타일",
      "examples": [
        {},
        {
          "knob": {
            "background": {
              "type": "asset",
              "value": "CustomKnobBackgroundImage"
            },
            "stroke": {
              "type": "solid",
              "color": "#0099ffaa"
            },
            "faceImage": {
              "type": "asset",
              "value": "CustomKnobFaceImage"
            }
          },
          "background": {
            "type": "asset",
            "value": "CustomJoystickBackgroundImage"
          }
        },
        {
          "$ref": "#/definitions/commonJoystickStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다."
    },
    "_InputMappingMagnitudinalToGamepadMagnitudinalOutput": {
      "properties": {
        "sensitivity": {
          "$ref": "#/$defs/Sensitivity"
        },
        "output": {
          "anyOf": [
            {
              "$ref": "#/$defs/_ControllerAnalogMagnitudinalOutputType"
            },
            {
              "$ref": "#/$defs/Reference"
            }
          ]
        },
        "input": {
          "$ref": "#/$defs/_InputAxisMagnitudinal"
        },
        "deadzone": {
          "$ref": "#/$defs/Deadzone1D"
        },
        "responseCurve": {
          "$ref": "#/$defs/InputCurve"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "input",
        "output"
      ]
    },
    "RelativeInteraction": {
      "description": "이 속성은 컨트롤과의 상호 작용을 계산하는 방법을 결정합니다. 상호 작용은 상호 작용이 시작된 위치를 기준으로 계산되거나 컨트롤의 중심을 사용하여 절대 방식으로 계산됩니다. 생략하면 `true` 기본값이 상호 작용의 시작점을 기준으로 계산하는 데 사용됩니다.",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "상대적인",
      "examples": [
        true,
        false,
        {
          "$ref": "../../context.json#/state/playerRelativeControlPreference"
        }
      ],
      "markdownDescription": "이 속성은 컨트롤과의 상호 작용을 계산하는 방법을 결정합니다. 상호 작용은 상호 작용이 시작된 위치를 기준으로 계산되거나 컨트롤의 중심을 사용하여 절대 방식으로 계산됩니다. 생략하면 `true` 기본값이 상호 작용의 시작점을 기준으로 계산하는 데 사용됩니다."
    },
    "FaceImageIconValue": {
      "description": "이 속성은 이 구성 요소에 사용할 기본 제공 아이콘을 선택하는 데 사용됩니다.",
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "ability",
            "ability2",
            "ability3",
            "abilityPowerPunch",
            "abilityPowerUp",
            "accept",
            "add",
            "aim",
            "armor",
            "arrow",
            "arrowReload",
            "attackBehind",
            "barrel",
            "block",
            "bomb",
            "book",
            "bow",
            "brakePedal",
            "brightness",
            "capture",
            "character",
            "characterSelect",
            "characterSelect2",
            "chat",
            "climbStairs",
            "close",
            "compass",
            "cover",
            "crouch",
            "cursor",
            "dPad",
            "dash",
            "defendByShield",
            "dodge",
            "downArrow",
            "downArrow2",
            "downChevron",
            "emotes",
            "enterCar",
            "enterDoor",
            "exit",
            "exitCar",
            "exitDoor",
            "fastForward",
            "fire",
            "firePunch",
            "flag",
            "gasPedal",
            "glide",
            "golf",
            "grab",
            "grenade",
            "gyroscope",
            "handbrake",
            "handbrake2",
            "health",
            "heavyKick",
            "heavyKick2",
            "heavyKick3",
            "heavyKick4",
            "heavyPunch",
            "heavyPunch2",
            "heavyPunch3",
            "heavySword",
            "heavySword2",
            "help",
            "horn",
            "hourglass",
            "interact",
            "internet",
            "inventory",
            "jump",
            "kick",
            "largeGridView",
            "leftArrow",
            "leftArrow2",
            "leftChevron",
            "leftRightArrows",
            "lightKick",
            "lightKick2",
            "lightKick3",
            "lightKick4",
            "lightPunch",
            "lightPunch2",
            "lightPunch3",
            "lightSword",
            "lightSword2",
            "look",
            "lookBehind",
            "lookBehind2",
            "lookByHand",
            "map",
            "map2",
            "medical",
            "meditate",
            "mediumKick",
            "mediumKick2",
            "mediumKick3",
            "mediumKick4",
            "mediumPunch",
            "mediumPunch2",
            "mediumPunch3",
            "mediumSword",
            "mediumSword2",
            "microphone",
            "mirror",
            "moreActions",
            "move",
            "move2",
            "notebook",
            "parameters",
            "pause",
            "phone",
            "pickAxe",
            "placeholder",
            "plane",
            "planeFast",
            "planeSlow",
            "punch",
            "punch2",
            "radialMenu",
            "radialMenu2",
            "radio",
            "ram",
            "redo",
            "reload",
            "repeatRefresh",
            "reset",
            "rewind",
            "rightArrow",
            "rightArrow2",
            "rightChevron",
            "roll",
            "run",
            "select",
            "selectAll",
            "selectionWheel",
            "sit",
            "skateboard",
            "skateboardGrab",
            "skateboardGrind",
            "skateboardJump",
            "skateboardOllie",
            "skateboardRampOver",
            "slide",
            "smallGridView",
            "speaker",
            "specialAbility",
            "sprint",
            "stealth",
            "steering",
            "stopwatch",
            "subtract",
            "surf",
            "switchCamera",
            "sword",
            "sword2",
            "sync",
            "targetLock",
            "team",
            "teamAttack",
            "throw",
            "titleMenu",
            "touch",
            "undo",
            "upArrow",
            "upArrow2",
            "upChevron",
            "walk",
            "waypoint",
            "weaponSelect",
            "zoomIn",
            "zoomOut"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "얼굴 이미지 아이콘",
      "examples": [
        "heavyPunch",
        {
          "$ref": "../../context.json#/definitions/commonIconForPunch"
        }
      ],
      "markdownDescription": "이 속성은 이 구성 요소에 사용할 기본 제공 아이콘을 선택하는 데 사용됩니다."
    },
    "LayoutUpperRightContent": {
      "description": "이 속성은 사용 가능한 표시 공간의 오른쪽 상단 모서리에 고정되는 레이아웃 콘텐츠를 정의합니다. 이 컨테이너에 추가된 컨트롤은 모서리에서 시작하여 화면 상단 중앙을 향해 안쪽으로 커집니다.",
      "anyOf": [
        {
          "minItems": 1,
          "maxItems": 5,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Control"
              },
              {
                "$ref": "#/$defs/_Null"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "오른쪽 상단 레이아웃 콘텐츠",
      "examples": [
        [
          {
            "type": "button",
            "action": "menu"
          },
          {
            "type": "button",
            "action": "view"
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonUpperRightControls"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 공간의 오른쪽 상단 모서리에 고정되는 레이아웃 콘텐츠를 정의합니다. 이 컨테이너에 추가된 컨트롤은 모서리에서 시작하여 화면 상단 중앙을 향해 안쪽으로 커집니다."
    },
    "_Throttle": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "$ref": "#/$defs/_ControlTypeThrottle"
        },
        "styles": {
          "$ref": "#/$defs/ThrottleStyles"
        },
        "axisDown": {
          "$ref": "#/$defs/ThrottleAxisOutput"
        },
        "relative": {
          "$ref": "#/$defs/RelativeInteraction"
        },
        "axisUp": {
          "$ref": "#/$defs/ThrottleAxisOutput"
        },
        "visible": {
          "$ref": "#/$defs/ControlVisibility"
        },
        "sticky": {
          "$ref": "#/$defs/Sticky"
        },
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        }
      },
      "examples": [
        {
          "sticky": true,
          "axisUp": "rightTrigger",
          "type": "throttle",
          "axisDown": "leftTrigger"
        }
      ],
      "type": "object",
      "required": [
        "type",
        "axisDown",
        "axisUp"
      ]
    },
    "_FaceImageIcon": {
      "properties": {
        "label": {
          "$ref": "#/$defs/FaceImageIconLabel"
        },
        "type": {
          "description": "컨트롤 구성 요소의 전경 그래픽으로 사용되는 기본 제공 아이콘입니다.",
          "title": "얼굴 이미지 아이콘 스타일링 구성 요소",
          "type": "string",
          "const": "icon",
          "markdownDescription": "컨트롤 구성 요소의 전경 그래픽으로 사용되는 기본 제공 아이콘입니다."
        },
        "opacity": {
          "$ref": "#/$defs/Opacity"
        },
        "value": {
          "$ref": "#/$defs/FaceImageIconValue"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "value"
      ]
    },
    "_InputMappingZYToMouse2DOutput": {
      "properties": {
        "sensitivity": {
          "$ref": "#/$defs/Sensitivity"
        },
        "output": {
          "$ref": "#/$defs/_RelativeMouse2DOutputType"
        },
        "input": {
          "$ref": "#/$defs/_InputAxisZY"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "input",
        "output"
      ]
    },
    "_SystemColorAccentSecondary": {
      "description": "이 속성은 ergo-edit 외부 휠과 같은 스타일링 구성 요소에 사용되는 악센트 보조 시스템 색상을 재정의합니다.",
      "title": "악센트 보조 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 ergo-edit 외부 휠과 같은 스타일링 구성 요소에 사용되는 악센트 보조 시스템 색상을 재정의합니다."
    },
    "_ControllerAnalog2DOutputType": {
      "description": "두 게임 패드 조이스틱 축 전체를 따라 값을 출력합니다.",
      "enum": [
        "rightJoystick",
        "leftJoystick"
      ],
      "title": "게임패드 아날로그 조이스틱 출력",
      "type": "string",
      "markdownDescription": "두 게임 패드 조이스틱 축 전체를 따라 값을 출력합니다."
    },
    "_SystemColorContentPrimary": {
      "description": "이 속성은 가운데 획, 아이콘 색조 및 dpad 그라데이션과 같은 구성 요소 스타일 지정에 사용되는 기본 시스템 색상을 재정의합니다.",
      "title": "콘텐츠 기본 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 가운데 획, 아이콘 색조 및 dpad 그라데이션과 같은 구성 요소 스타일 지정에 사용되는 기본 시스템 색상을 재정의합니다."
    },
    "_DirectionalPad": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "$ref": "#/$defs/_ControlTypeDirectionalPad"
        },
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        },
        "visible": {
          "$ref": "#/$defs/ControlVisibility"
        },
        "styles": {
          "$ref": "#/$defs/DirectionalPadStyles"
        },
        "interaction": {
          "$ref": "#/$defs/DirectionalPadInteraction"
        },
        "deadzone": {
          "$ref": "#/$defs/DeadzoneDirectionalPad"
        },
        "scale": {
          "$ref": "#/$defs/Scale"
        }
      },
      "examples": [
        {
          "type": "directionalPad"
        }
      ],
      "type": "object",
      "required": [
        "type"
      ]
    },
    "Stroke": {
      "description": "컨트롤 구성 요소의 스트로크에 대한 시각적 스타일입니다. 스트로크는 일반적으로 제어 구성 요소의 범위를 표시하는 데 사용되는 테두리 또는 윤곽선입니다.",
      "title": "획 스타일 지정 구성 요소",
      "$ref": "#/$defs/_StrokeBase",
      "markdownDescription": "컨트롤 구성 요소의 스트로크에 대한 시각적 스타일입니다. 스트로크는 일반적으로 제어 구성 요소의 범위를 표시하는 데 사용되는 테두리 또는 윤곽선입니다."
    },
    "ThrottleAxisStyle": {
      "description": "스로틀 축 구성 요소의 시각적 스타일입니다. 이 구성 요소는 플레이어에게 가능한 입력 범위와 컨트롤이 현재 있는 영역(위 또는 아래)을 표시합니다.",
      "anyOf": [
        {
          "properties": {
            "cap": {
              "$ref": "#/$defs/AxisCap"
            },
            "stroke": {
              "$ref": "#/$defs/Stroke"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "스로틀 축 스타일링 구성 요소",
      "examples": [
        {
          "cap": {
            "type": "color",
            "value": "#0099ffaa"
          },
          "stroke": {
            "color": "#0099ff",
            "type": "solid",
            "opacity": 1
          }
        }
      ],
      "markdownDescription": "스로틀 축 구성 요소의 시각적 스타일입니다. 이 구성 요소는 플레이어에게 가능한 입력 범위와 컨트롤이 현재 있는 영역(위 또는 아래)을 표시합니다."
    },
    "_SystemColorContrastPrimary": {
      "description": "이 속성은 내부/외부 획 및 얼굴 이미지 백플레이트와 같은 대비 구성 요소의 스타일 지정에 사용되는 대비 기본 시스템 색상을 재정의합니다.",
      "title": "대비 기본 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 내부/외부 획 및 얼굴 이미지 백플레이트와 같은 대비 구성 요소의 스타일 지정에 사용되는 대비 기본 시스템 색상을 재정의합니다."
    },
    "_FaceImageAsset": {
      "properties": {
        "type": {
          "description": "컨트롤 구성 요소의 전경 그래픽으로 사용되는 사용자 지정 자산입니다.",
          "title": "얼굴 이미지 자산 스타일링 구성 요소",
          "type": "string",
          "const": "asset",
          "markdownDescription": "컨트롤 구성 요소의 전경 그래픽으로 사용되는 사용자 지정 자산입니다."
        },
        "opacity": {
          "$ref": "#/$defs/Opacity"
        },
        "value": {
          "$ref": "#/$defs/FaceImageAssetValue"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "value"
      ]
    },
    "_Blank": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "레이어를 사용하는 레이아웃을 만들 때 빈 컨트롤 유형을 사용하여 그 아래 레이어에 있는 기존 컨트롤 또는 컨트롤 그룹을 재정의하거나 숨깁니다. 빈 컨트롤은 상호 작용할 수 없으며 스타일을 지정할 수 있는 구성 요소가 없습니다.",
          "title": "공백 제어 유형",
          "type": "string",
          "const": "blank",
          "markdownDescription": "레이어를 사용하는 레이아웃을 만들 때 빈 컨트롤 유형을 사용하여 그 아래 레이어에 있는 기존 컨트롤 또는 컨트롤 그룹을 재정의하거나 숨깁니다. 빈 컨트롤은 상호 작용할 수 없으며 스타일을 지정할 수 있는 구성 요소가 없습니다."
        }
      },
      "examples": [
        {
          "type": "blank"
        }
      ],
      "type": "object",
      "required": [
        "type"
      ]
    },
    "_SystemColorGamepadActionColor": {
      "description": "이 속성은 `action` 필드가 `gamepadA`, `gamepadB`, `gamepadX` 또는 `gamepadY`로 설정된 컨트롤의 구성요소 스타일 지정에 사용되는 해당 게임패드 작업 시스템 색상을 재정의합니다.",
      "title": "게임패드 액션 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 `action` 필드가 `gamepadA`, `gamepadB`, `gamepadX` 또는 `gamepadY`로 설정된 컨트롤의 구성요소 스타일 지정에 사용되는 해당 게임패드 작업 시스템 색상을 재정의합니다."
    },
    "ThrottleStyles": {
      "description": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "idleUp": {
              "description": "컨트롤이 `idleUp` 상태일 때 사용되는 스타일 재정의입니다. `idleUp` 상태는 컨트롤이 상호 작용되고 있지 않지만 컨트롤의 값이 컨트롤 중심 위의 영역에 유지되는 경우입니다. 컨트롤이 `sticky` 경우에만 이 상태에 도달할 수 있습니다.",
              "title": "유휴 스타일 제어",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤이 `idleUp` 상태일 때 사용되는 스타일 재정의입니다. `idleUp` 상태는 컨트롤이 상호 작용되고 있지 않지만 컨트롤의 값이 컨트롤 중심 위의 영역에 유지되는 경우입니다. 컨트롤이 `sticky` 경우에만 이 상태에 도달할 수 있습니다."
            },
            "disabled": {
              "description": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다.",
              "title": "컨트롤 비활성화 스타일",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다."
            },
            "activatedUp": {
              "description": "컨트롤이 `activatedUp` 상태일 때 사용되는 스타일 재정의입니다. `activatedUp` 상태는 특히 컨트롤 중앙 위의 영역에서 컨트롤이 상호 작용할 때입니다.",
              "title": "컨트롤 활성화 업 스타일",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤이 `activatedUp` 상태일 때 사용되는 스타일 재정의입니다. `activatedUp` 상태는 특히 컨트롤 중앙 위의 영역에서 컨트롤이 상호 작용할 때입니다."
            },
            "idle": {
              "description": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다.",
              "title": "유휴 스타일 제어",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다."
            },
            "activated": {
              "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
              "title": "컨트롤 활성화 스타일",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
            },
            "activatedDown": {
              "description": "컨트롤이 `activatedDown` 상태일 때 사용되는 스타일 재정의입니다. `activatedDown` 상태는 특히 컨트롤 중앙 아래 영역에서 컨트롤이 상호 작용할 때입니다.",
              "title": "컨트롤 활성화 다운 스타일",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤이 `activatedDown` 상태일 때 사용되는 스타일 재정의입니다. `activatedDown` 상태는 특히 컨트롤 중앙 아래 영역에서 컨트롤이 상호 작용할 때입니다."
            },
            "default": {
              "description": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다.",
              "title": "제어 기본 스타일",
              "$ref": "#/$defs/ThrottleStyleBase",
              "markdownDescription": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 스타일",
      "examples": [
        {
          "default": {
            "axisUp": {
              "cap": {
                "type": "color",
                "value": "#0099ffaa"
              },
              "stroke": {
                "color": "#0099ff",
                "type": "solid",
                "opacity": 1
              }
            },
            "axisDown": {
              "cap": {
                "type": "color",
                "value": "#0099ffaa"
              },
              "stroke": {
                "color": "#0099ff",
                "type": "solid",
                "opacity": 1
              }
            },
            "knob": {
              "background": {
                "type": "asset",
                "value": "CustomKnobBackgroundImage"
              },
              "stroke": {
                "type": "solid",
                "color": "#0099ffaa"
              },
              "faceImage": {
                "type": "asset",
                "value": "CustomKnobFaceImage"
              }
            }
          }
        },
        {
          "$ref": "#/definitions/commonThrottleStyles"
        }
      ],
      "markdownDescription": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다."
    },
    "LayoutSensorContent": {
      "description": "이 속성은 장치의 센서 입력을 상호 작용으로 사용하는 레이아웃 콘텐츠의 컨테이너를 정의합니다.",
      "anyOf": [
        {
          "minItems": 1,
          "maxItems": 4,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/SensorControl"
              },
              {
                "$ref": "#/$defs/_Null"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "센서 레이아웃 콘텐츠",
      "examples": [
        [
          {
            "type": "gyroscope",
            "axis": {
              "input": "axisXY",
              "output": "rightJoystick"
            }
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonSensors"
        }
      ],
      "markdownDescription": "이 속성은 장치의 센서 입력을 상호 작용으로 사용하는 레이아웃 콘텐츠의 컨테이너를 정의합니다."
    },
    "AxisCapColor": {
      "description": "축 제어 구성 요소의 한계를 나타내는 데 사용되는 시각적 스타일입니다. 축의 최대값 또는 최소값을 의미 체계적으로 나타내기 위해 색상으로 스타일을 지정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "type": {
              "description": "축 제어 구성 요소의 한계를 나타내는 데 사용되는 시각적 스타일입니다. 축의 최대값 또는 최소값을 의미 체계적으로 나타내기 위해 색상으로 스타일을 지정할 수 있습니다.",
              "title": "축 캡 스타일링 구성 요소",
              "type": "string",
              "const": "color",
              "markdownDescription": "축 제어 구성 요소의 한계를 나타내는 데 사용되는 시각적 스타일입니다. 축의 최대값 또는 최소값을 의미 체계적으로 나타내기 위해 색상으로 스타일을 지정할 수 있습니다."
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "value": {
              "$ref": "#/$defs/Color"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "type",
            "value"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "축 캡 스타일링 구성 요소",
      "examples": [
        {
          "type": "color",
          "value": "#0099ffaa"
        }
      ],
      "markdownDescription": "축 제어 구성 요소의 한계를 나타내는 데 사용되는 시각적 스타일입니다. 축의 최대값 또는 최소값을 의미 체계적으로 나타내기 위해 색상으로 스타일을 지정할 수 있습니다."
    },
    "_StrokeBase": {
      "examples": [
        {
          "color": "#0099ff",
          "type": "solid",
          "opacity": 1
        },
        {
          "$ref": "#/definitions/commonControlStroke"
        }
      ],
      "anyOf": [
        {
          "properties": {
            "color": {
              "$ref": "#/$defs/Color"
            },
            "type": {
              "description": "이 스타일 구성 요소는 사용자 지정 가능한 색상 및 불투명도로 단색 획을 지정하는 데 사용됩니다.",
              "type": "string",
              "const": "solid",
              "markdownDescription": "이 스타일 구성 요소는 사용자 지정 가능한 색상 및 불투명도로 단색 획을 지정하는 데 사용됩니다."
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "type"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "Background": {
      "description": "컨트롤 구성 요소 배경의 시각적 스타일입니다. 배경은 `color` 또는 `asset` 수 있습니다.",
      "anyOf": [
        {
          "$ref": "#/$defs/_BackgroundColor"
        },
        {
          "$ref": "#/$defs/_BackgroundAsset"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "배경 스타일 구성 요소",
      "markdownDescription": "컨트롤 구성 요소 배경의 시각적 스타일입니다. 배경은 `color` 또는 `asset` 수 있습니다."
    },
    "_ControllerAnalog1DOutputType": {
      "description": "지정된 게임패드 조이스틱 축 전체를 따라 값을 출력합니다.",
      "enum": [
        "leftJoystickX",
        "leftJoystickY",
        "rightJoystickX",
        "rightJoystickY"
      ],
      "title": "게임패드 아날로그 조이스틱 출력",
      "type": "string",
      "markdownDescription": "지정된 게임패드 조이스틱 축 전체를 따라 값을 출력합니다."
    },
    "FaceImageAssetValue": {
      "$ref": "#/$defs/AssetReference"
    },
    "Knob": {
      "description": "컨트롤 노브의 시각적 스타일입니다. 노브는 예를 들어 조이스틱 상단을 모방하는 컨트롤의 상호 작용 지점입니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "stroke": {
              "$ref": "#/$defs/Stroke"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "노브 스타일링 구성 요소",
      "examples": [
        {
          "background": {
            "type": "asset",
            "value": "CustomKnobBackgroundImage"
          },
          "stroke": {
            "type": "solid",
            "color": "#0099ffaa"
          },
          "faceImage": {
            "type": "asset",
            "value": "CustomKnobFaceImage"
          }
        },
        {
          "$ref": "#/definitions/commonControlKnobStyling"
        }
      ],
      "markdownDescription": "컨트롤 노브의 시각적 스타일입니다. 노브는 예를 들어 조이스틱 상단을 모방하는 컨트롤의 상호 작용 지점입니다."
    },
    "DirectionalPadInteractionActivationType": {
      "description": "이 속성은 플레이어 상호 작용에 대한 응답으로 컨트롤과 해당 하위 구성 요소가 활성화되는 방식을 결정합니다. 활성화 유형은 `exclusive` 또는 `allowNeighboring`일 수 있습니다. `exclusive`으로 설정하면 컨트롤의 하위 구성요소 하나만 한 번에 활성화됩니다. `allowNeighboring`이 설정되면 플레이어가 컨트롤과 상호 작용하는 위치에 따라 컨트롤의 여러 하위 구성 요소가 동시에 활성화될 수 있습니다. 생략하면 `allowNeighboring`의 기본값이 사용됩니다.",
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "exclusive",
            "allowNeighboring"
          ]
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "활성화 유형",
      "examples": [
        "exclusive",
        "allowNeighboring",
        {
          "$ref": "../../context.json#/state/playerDpadInteractionPreference"
        }
      ],
      "markdownDescription": "이 속성은 플레이어 상호 작용에 대한 응답으로 컨트롤과 해당 하위 구성 요소가 활성화되는 방식을 결정합니다. 활성화 유형은 `exclusive` 또는 `allowNeighboring`일 수 있습니다. `exclusive`으로 설정하면 컨트롤의 하위 구성요소 하나만 한 번에 활성화됩니다. `allowNeighboring`이 설정되면 플레이어가 컨트롤과 상호 작용하는 위치에 따라 컨트롤의 여러 하위 구성 요소가 동시에 활성화될 수 있습니다. 생략하면 `allowNeighboring`의 기본값이 사용됩니다."
    },
    "FaceImageIconLabel": {
      "description": "이 속성은 얼굴 이미지 아이콘에 레이블이 표시되는 방식을 결정합니다. `action` 유형은 의미 체계 이미지를 사용하여 게임 프롬프트 및 이미지가 시맨틱 아이콘과 완벽하게 일치하지 않는 경우 플레이어에게 해당 작업이 무엇인지 상기시키는 데 유용합니다. 이러한 추가 레이블을 숨기려면 `none` 유형을 사용할 수 있습니다. 생략하면 `action`의 기본값이 사용됩니다.",
      "anyOf": [
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "action",
                "none"
              ]
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "얼굴 이미지 아이콘 레이블 스타일링 구성 요소",
      "examples": [
        {
          "type": "action"
        },
        {
          "type": "none"
        },
        {
          "$ref": "../../context.json#/state/playerShowButtonLabelsPreference"
        }
      ],
      "markdownDescription": "이 속성은 얼굴 이미지 아이콘에 레이블이 표시되는 방식을 결정합니다. `action` 유형은 의미 체계 이미지를 사용하여 게임 프롬프트 및 이미지가 시맨틱 아이콘과 완벽하게 일치하지 않는 경우 플레이어에게 해당 작업이 무엇인지 상기시키는 데 유용합니다. 이러한 추가 레이블을 숨기려면 `none` 유형을 사용할 수 있습니다. 생략하면 `action`의 기본값이 사용됩니다."
    },
    "SensorLayerControl": {
      "markdownDescription": "장치의 사용 가능한 센서에서 상호 작용을 가져와 출력으로 변환하는 보이지 않는 개별 컨트롤입니다. `blank` 컨트롤은 이 레이어 아래의 레이어에서 센서 컨트롤을 숨기거나 끄는 데 사용할 수 있습니다.",
      "description": "장치의 사용 가능한 센서에서 상호 작용을 가져와 출력으로 변환하는 보이지 않는 개별 컨트롤입니다. `blank` 컨트롤은 이 레이어 아래의 레이어에서 센서 컨트롤을 숨기거나 끄는 데 사용할 수 있습니다.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "accelerometer",
            "gyroscope",
            "blank"
          ]
        }
      },
      "title": "레이어 센서 제어",
      "examples": [
        {
          "type": "blank"
        },
        {
          "$ref": "../../context.json#/definitions/commonGyroscopeControl"
        }
      ],
      "anyOf": [
        {
          "$ref": "#/$defs/_Accelerometer"
        },
        {
          "$ref": "#/$defs/_Gyroscope"
        },
        {
          "$ref": "#/$defs/_Blank"
        },
        {
          "$ref": "#/$defs/_Null"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ]
    },
    "ButtonDisabledStyle": {
      "description": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "faceImage": {
              "$ref": "#/$defs/FaceImage"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 비활성화 스타일",
      "examples": [
        {},
        {
          "faceImage": {
            "type": "icon",
            "value": "interact"
          }
        },
        {
          "$ref": "#/definitions/commonButtonStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다."
    },
    "Layers": {
      "description": "이 속성을 사용하면 다른 컨트롤의 플레이어 작업에 대한 응답으로 추가 컨트롤을 오버레이하거나 레이아웃 콘텐츠를 변경하기 위해 컨트롤 `action`에서 사용할 수 있는 사용자 지정 컨트롤 레이어를 정의할 수 있습니다.",
      "anyOf": [
        {
          "additionalProperties": false,
          "patternProperties": {
            "^(?!__proto__)[a-zA-Z0-9\\.\\-_]+$": {
              "$ref": "#/$defs/Layer"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "터치 레이아웃 레이어",
      "examples": [
        {
          "AdvancedDrivingLayer": {
            "left": {
              "inner": [
                {
                  "sticky": true,
                  "axisUp": "rightTrigger",
                  "type": "throttle",
                  "axisDown": "leftTrigger"
                }
              ]
            }
          }
        },
        {
          "$ref": "../../context.json#/definitions/commonLayersForDrivingLayouts"
        }
      ],
      "markdownDescription": "이 속성을 사용하면 다른 컨트롤의 플레이어 작업에 대한 응답으로 추가 컨트롤을 오버레이하거나 레이아웃 콘텐츠를 변경하기 위해 컨트롤 `action`에서 사용할 수 있는 사용자 지정 컨트롤 레이어를 정의할 수 있습니다."
    },
    "_SystemColorContentSecondary": {
      "description": "이 속성은 배경 및 채우기와 같은 구성 요소 스타일 지정에 사용되는 보조 시스템 색을 재정의합니다.",
      "title": "콘텐츠 보조 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 배경 및 채우기와 같은 구성 요소 스타일 지정에 사용되는 보조 시스템 색을 재정의합니다."
    },
    "_LayoutAction": {
      "examples": [
        {
          "type": "layer",
          "target": "WeaponSelectLayer"
        }
      ],
      "additionalProperties": false,
      "description": "작업이 실행되는 동안 레이어 적용과 같은 레이아웃 변경을 트리거하는 작업 유형입니다.",
      "markdownDescription": "작업이 실행되는 동안 레이어 적용과 같은 레이아웃 변경을 트리거하는 작업 유형입니다.",
      "required": [
        "type",
        "target"
      ],
      "title": "레이아웃 작업",
      "properties": {
        "target": {
          "$ref": "#/$defs/LayoutActionTarget"
        },
        "type": {
          "description": "작업이 실행되는 동안 레이어 적용과 같은 레이아웃 변경을 트리거하는 작업 유형입니다.",
          "title": "레이아웃 작업",
          "type": "string",
          "const": "layer",
          "markdownDescription": "작업이 실행되는 동안 레이어 적용과 같은 레이아웃 변경을 트리거하는 작업 유형입니다."
        }
      },
      "type": "object"
    },
    "InnerLayerControlWheel": {
      "description": "아래 레이어에서 컨트롤을 숨기는 `blank` 컨트롤을 포함하여 1~4개의 레이어 컨트롤 세트가 컨트롤 휠의 내부 세그먼트에 그룹으로 배열되어 있습니다. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 전체 내부 세그먼트의 상호 작용 영역은 할당된 컨트롤 간에 균등하게 분할됩니다. 또한 아래 레이어의 컨트롤 그룹이 이 컨트롤 그룹과 항목 수가 다른 경우 해당 레이어의 모든 항목이 숨겨집니다.",
      "anyOf": [
        {
          "maxItems": 4,
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/LayerControl"
          },
          "type": "array"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "내부",
      "examples": [
        [],
        [
          null,
          {
            "type": "blank"
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonLeftInnerWheelForDrivingLayouts"
        }
      ],
      "markdownDescription": "아래 레이어에서 컨트롤을 숨기는 `blank` 컨트롤을 포함하여 1~4개의 레이어 컨트롤 세트가 컨트롤 휠의 내부 세그먼트에 그룹으로 배열되어 있습니다. 시스템은 사용 가능한 공간 내에서 그룹의 컨트롤을 가장 잘 정렬하는 방법을 결정합니다. 전체 내부 세그먼트의 상호 작용 영역은 할당된 컨트롤 간에 균등하게 분할됩니다. 또한 아래 레이어의 컨트롤 그룹이 이 컨트롤 그룹과 항목 수가 다른 경우 해당 레이어의 모든 항목이 숨겨집니다."
    },
    "ArcadeButtonStyles": {
      "description": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다.",
      "anyOf": [
        {
          "properties": {
            "default": {
              "description": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다.",
              "title": "제어 기본 스타일",
              "$ref": "#/$defs/ArcadeButtonStyleBase",
              "markdownDescription": "컨트롤에 적용할 기본 스타일 지정 매개 변수입니다. 이러한 매개 변수는 시스템에서 컨트롤에 대해 제공한 기본 스타일을 재정의하는 데 사용됩니다. 특정 상태에 대한 스타일을 지정하여 시각적 개체를 더 재정의할 수 있습니다. 특정 상태(예: `disabled`)에서는 특정 스타일이 제공되지 않은 경우 기본 스타일이 대체로 사용되지만 컨트롤을 사용할 수 없음을 나타내기 위해 전체 불투명도가 감소하는 등 해당 상태에 대해 일부 변경이 발생할 수 있습니다."
            },
            "idle": {
              "description": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다.",
              "title": "유휴 스타일 제어",
              "$ref": "#/$defs/ArcadeButtonStyleBase",
              "markdownDescription": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다."
            },
            "disabled": {
              "description": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다.",
              "title": "컨트롤 비활성화 스타일",
              "$ref": "#/$defs/ArcadeButtonStyleBase",
              "markdownDescription": "컨트롤이 `disabled` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서는 플레이어가 컨트롤과 상호 작용할 때 출력이 계속 실행되더라도 컨트롤이 시각적으로 비활성화됩니다. 여기서 명시적으로 재정의하지 않는 한 `default` 스타일 구성에 제공된 값은 감소된 전체 컨트롤 불투명도와 함께 사용되며 컨트롤이 비활성화되었음을 표시하기 위해 모든 상호 작용 표시기가 숨겨집니다."
            },
            "activated": {
              "description": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다.",
              "title": "컨트롤 활성화 스타일",
              "$ref": "#/$defs/ArcadeButtonStyleBase",
              "markdownDescription": "컨트롤이 `activated` 상태일 때 사용되는 스타일 재정의입니다. `activated` 상태는 컨트롤이 상호 작용되고 해당 작업이 실행되고 있는 때입니다."
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "컨트롤 스타일",
      "examples": [
        {
          "default": {
            "faceImage": {
              "type": "asset",
              "value": "CustomDefaultArcadeButtonFaceImage"
            },
            "background": {
              "type": "asset",
              "value": "CustomDefaultArcadeButtonBackgroundImage"
            }
          },
          "activated": {
            "faceImage": {
              "type": "asset",
              "value": "CustomActivatedArcadeButtonFaceImage"
            },
            "background": {
              "type": "asset",
              "value": "CustomActivatedArcadeButtonBackgroundImage"
            }
          }
        },
        {
          "$ref": "#/definitions/commonArcadeButtonStyles"
        }
      ],
      "markdownDescription": "컨트롤의 시각적 스타일 정의입니다. 컨트롤의 각 상태에 대해 스타일을 재정의할 수 있습니다. 특정 상태에서 사용자 지정되지 않은 요소의 경우 `default` 스타일 지정 속성 또는 시스템 기본값이 컨트롤 스타일을 지정하는 기준으로 사용됩니다. 시스템은 예를 들어 `disabled` 상태에서 불투명도를 줄임으로써 특정 상태에서 적절하게 `default` 스타일에서 컨트롤의 시각적 개체를 여전히 수정할 수 있습니다."
    },
    "LayoutLowerArrayContent": {
      "description": "이 속성은 사용 가능한 표시 영역의 하단 중앙에서 바깥쪽으로 확장되는 배열인 레이아웃의 내용을 정의합니다. 이 속성은 이 속성 아래에 있는 레이어에서 컨트롤을 숨기는 데 `blank` 컨트롤을 사용할 수 있다는 점을 제외하면 레이아웃 콘텐츠의 동일한 명명된 속성과 동일하게 작동합니다.",
      "anyOf": [
        {
          "minItems": 1,
          "maxItems": 4,
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Control"
              },
              {
                "$ref": "#/$defs/_Null"
              }
            ]
          }
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "하위 레이아웃 배열 콘텐츠",
      "examples": [
        [
          {
            "type": "button",
            "action": "dPadLeft"
          }
        ],
        {
          "$ref": "../../context.json#/definitions/commonLayoutLowerLeftCenterContent"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 영역의 하단 중앙에서 바깥쪽으로 확장되는 배열인 레이아웃의 내용을 정의합니다. 이 속성은 이 속성 아래에 있는 레이어에서 컨트롤을 숨기는 데 `blank` 컨트롤을 사용할 수 있다는 점을 제외하면 레이아웃 콘텐츠의 동일한 명명된 속성과 동일하게 작동합니다."
    },
    "_InputMappingMagnitudinal": {
      "anyOf": [
        {
          "$ref": "#/$defs/_InputMappingMagnitudinalToGamepadMagnitudinalOutput"
        }
      ]
    },
    "LayerUpperContent": {
      "description": "이 속성은 사용 가능한 표시 공간의 위쪽 가장자리에 고정되는 레이어 콘텐츠를 정의합니다. 이 속성은 이 레이어 아래에 있는 레이어에서 컨트롤을 숨기기 위해 `blank` 컨트롤 유형을 사용할 수 있다는 점을 제외하면 기본 레이아웃의 위쪽 영역을 미러링합니다.",
      "anyOf": [
        {
          "properties": {
            "right": {
              "$ref": "#/$defs/LayerUpperRightContent"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "상위 계층 콘텐츠",
      "examples": [
        {
          "right": [
            {
              "type": "blank"
            },
            {
              "type": "button",
              "action": "view"
            }
          ]
        },
        {
          "$ref": "../../context.json#/definitions/commonUpperLayerControls"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 공간의 위쪽 가장자리에 고정되는 레이어 콘텐츠를 정의합니다. 이 속성은 이 레이어 아래에 있는 레이어에서 컨트롤을 숨기기 위해 `blank` 컨트롤 유형을 사용할 수 있다는 점을 제외하면 기본 레이아웃의 위쪽 영역을 미러링합니다."
    },
    "JoystickIdleStyle": {
      "description": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다.",
      "anyOf": [
        {
          "properties": {
            "background": {
              "$ref": "#/$defs/Background"
            },
            "opacity": {
              "$ref": "#/$defs/Opacity"
            },
            "outline": {
              "$ref": "#/$defs/JoystickOutlineWithoutIndicator"
            },
            "knob": {
              "$ref": "#/$defs/Knob"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "유휴 스타일 제어",
      "examples": [
        {},
        {
          "knob": {
            "background": {
              "type": "asset",
              "value": "CustomKnobBackgroundImage"
            },
            "stroke": {
              "type": "solid",
              "color": "#0099ffaa"
            },
            "faceImage": {
              "type": "asset",
              "value": "CustomKnobFaceImage"
            }
          },
          "background": {
            "type": "asset",
            "value": "CustomJoystickBackgroundImage"
          }
        },
        {
          "$ref": "#/definitions/commonJoystickStyle"
        }
      ],
      "markdownDescription": "컨트롤이 `idle` 상태일 때 사용되는 스타일 재정의입니다. 이 상태에서 컨트롤은 상호 작용하지 않으며 중립 또는 휴지 상태로 간주됩니다."
    },
    "DeadzoneDirectionalPad": {
      "description": "입력을 무시하는 방향성 패드 영역의 정규화된 반경입니다. 작은 입력 변화가 활성화되는 방향을 크게 바꿀 수 있는 방향성 패드의 중심 근처에서 원하지 않는 방향의 변화를 피하는 데 유용합니다. 생략하면 0.25 값이 사용됩니다. 이 값을 변경하면 플레이어에게 이 크기를 표시하기 위해 방향 패드가 렌더링되는 방식이 변경됩니다.",
      "anyOf": [
        {
          "exclusiveMinimum": 0,
          "type": "number",
          "exclusiveMaximum": 1
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "방향 패드 데드존",
      "examples": [
        0.5,
        1,
        0,
        {
          "$ref": "#/definitions/dpadDeadzone"
        }
      ],
      "markdownDescription": "입력을 무시하는 방향성 패드 영역의 정규화된 반경입니다. 작은 입력 변화가 활성화되는 방향을 크게 바꿀 수 있는 방향성 패드의 중심 근처에서 원하지 않는 방향의 변화를 피하는 데 유용합니다. 생략하면 0.25 값이 사용됩니다. 이 값을 변경하면 플레이어에게 이 크기를 표시하기 위해 방향 패드가 렌더링되는 방식이 변경됩니다."
    },
    "Sensitivity": {
      "description": "컨트롤의 민감도를 변경하는 데 사용되는 승수 값입니다. 이 값은 0보다 커야 합니다. 생략하면 기본값 1이 사용됩니다.",
      "anyOf": [
        {
          "type": "number",
          "exclusiveMinimum": 0
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "민감도",
      "examples": [
        10,
        1.5,
        0.5,
        {
          "$ref": "../../context.json#/state/playerSensitivityPreference"
        }
      ],
      "markdownDescription": "컨트롤의 민감도를 변경하는 데 사용되는 승수 값입니다. 이 값은 0보다 커야 합니다. 생략하면 기본값 1이 사용됩니다."
    },
    "_InputAxisZY": {
      "description": "컨트롤의 Z 및 Y축에서 상호 작용을 사용하여 지정된 출력으로 변환합니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오.",
      "title": "Z 및 Y축 입력 매핑",
      "type": "string",
      "const": "axisZY",
      "markdownDescription": "컨트롤의 Z 및 Y축에서 상호 작용을 사용하여 지정된 출력으로 변환합니다. 이 매핑에 대한 자세한 내용은 `output` 속성을 참조하십시오."
    },
    "_Touchpad": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "$ref": "#/$defs/ControlEnabled"
        },
        "visible": {
          "$ref": "#/$defs/ControlVisibility"
        },
        "styles": {
          "$ref": "#/$defs/TouchpadStyles"
        },
        "axis": {
          "$ref": "#/$defs/AxisMapping2D"
        },
        "renderAsButton": {
          "$ref": "#/$defs/RenderAsButton"
        },
        "type": {
          "$ref": "#/$defs/_ControlTypeTouchpad"
        },
        "action": {
          "$ref": "#/$defs/ActionType"
        }
      },
      "examples": [
        {
          "axis": [
            {
              "input": "axisXY",
              "output": "relativeMouse"
            }
          ],
          "type": "touchpad",
          "styles": {
            "default": {
              "faceImage": {
                "type": "icon",
                "value": "look"
              }
            }
          }
        }
      ],
      "type": "object",
      "required": [
        "type",
        "axis"
      ]
    },
    "_SystemColorActionColor": {
      "description": "이 속성은 `action` 필드가 비 게임패드 작업으로 설정된 컨트롤의 구성 요소 스타일 지정에 사용되는 해당 작업 시스템 색상을 재정의합니다.",
      "title": "액션 시스템 색상 재정의",
      "$ref": "#/$defs/_ColorPaletteColor",
      "markdownDescription": "이 속성은 `action` 필드가 비 게임패드 작업으로 설정된 컨트롤의 구성 요소 스타일 지정에 사용되는 해당 작업 시스템 색상을 재정의합니다."
    },
    "LayoutUpperContent": {
      "description": "이 속성은 사용 가능한 표시 공간의 위쪽 가장자리에 고정되는 레이아웃 콘텐츠를 정의합니다. 현재 왼쪽 상단은 시스템 빠른 액세스 메뉴용으로 예약되어 있으므로 오른쪽 상단 공간만 컨트롤을 추가할 수 있습니다. 오른쪽 상단의 콘텐츠는 더 큰 장치에서 쉽게 액세스할 수 없기 때문에 이 공간은 일시 중지 메뉴를 끌어오거나 영화 장면을 건너뛰는 것과 같이 게임 플레이 도중이 아닌 간헐적으로만 액세스해야 하는 컨트롤에 가장 적합합니다.",
      "anyOf": [
        {
          "properties": {
            "right": {
              "$ref": "#/$defs/LayoutUpperRightContent"
            }
          },
          "additionalProperties": false,
          "type": "object"
        },
        {
          "$ref": "#/$defs/Reference"
        }
      ],
      "title": "상위 레이아웃 콘텐츠",
      "examples": [
        {
          "right": [
            {
              "type": "button",
              "action": "menu"
            },
            {
              "type": "button",
              "action": "view"
            }
          ]
        },
        {
          "$ref": "../../context.json#/definitions/commonUpperControls"
        }
      ],
      "markdownDescription": "이 속성은 사용 가능한 표시 공간의 위쪽 가장자리에 고정되는 레이아웃 콘텐츠를 정의합니다. 현재 왼쪽 상단은 시스템 빠른 액세스 메뉴용으로 예약되어 있으므로 오른쪽 상단 공간만 컨트롤을 추가할 수 있습니다. 오른쪽 상단의 콘텐츠는 더 큰 장치에서 쉽게 액세스할 수 없기 때문에 이 공간은 일시 중지 메뉴를 끌어오거나 영화 장면을 건너뛰는 것과 같이 게임 플레이 도중이 아닌 간헐적으로만 액세스해야 하는 컨트롤에 가장 적합합니다."
    },
    "DeadzoneRadial": {
      "description": "데드존 임계값이 방사형 입력 구성 요소를 따라 계산되는지 아니면 각 축에 대해 개별적으로 계산되는지 여부입니다.",
      "anyOf": [
        {
          "type": "boolean"
        }
      ],
      "title": "방사형",
      "examples": [
        true,
        false,
        {
          "$ref": "#/definitions/radialConfig"
        }
      ],
      "markdownDescription": "데드존 임계값이 방사형 입력 구성 요소를 따라 계산되는지 아니면 각 축에 대해 개별적으로 계산되는지 여부입니다."
    }
  },
  "type": "object"
}